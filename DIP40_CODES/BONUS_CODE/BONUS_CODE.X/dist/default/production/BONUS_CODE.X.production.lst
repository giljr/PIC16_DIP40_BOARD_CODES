

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 12:15:21 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 22/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000E                     	;# 
   138     000F                     	;# 
   139     0010                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001D                     	;# 
   155     001E                     	;# 
   156     001F                     	;# 
   157     0081                     	;# 
   158     0085                     	;# 
   159     0086                     	;# 
   160     0087                     	;# 
   161     0088                     	;# 
   162     0089                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0094                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182                           
   183                           	psect	strings
   184     0003                     __pstrings:
   185     0003                     stringtab:
   186     0003                     __stringtab:
   187                           
   188                           ;	String table - string pointers are 1 byte each
   189     0003  1BFF               	btfsc	btemp+1,7
   190     0004  280D               	ljmp	stringcode
   191     0005  1383               	bcf	3,7
   192     0006  187F               	btfsc	btemp+1,0
   193     0007  1783               	bsf	3,7
   194     0008  0800               	movf	0,w
   195     0009  0A84               	incf	4,f
   196     000A  1903               	skipnz
   197     000B  0AFF               	incf	btemp+1,f
   198     000C  0008               	return
   199     000D                     stringcode:
   200     000D                     stringdir:
   201     000D  3000               	movlw	high stringdir
   202     000E  008A               	movwf	10
   203     000F  0804               	movf	4,w
   204     0010  0A84               	incf	4,f
   205     0011  0782               	addwf	2,f
   206     0012                     __stringbase:
   207     0012  3400               	retlw	0
   208     0013                     __end_of__stringtab:
   209     0013                     _dpowers:
   210     0013  3401               	retlw	1
   211     0014  3400               	retlw	0
   212     0015  340A               	retlw	10
   213     0016  3400               	retlw	0
   214     0017  3464               	retlw	100
   215     0018  3400               	retlw	0
   216     0019  34E8               	retlw	232
   217     001A  3403               	retlw	3
   218     001B  3410               	retlw	16
   219     001C  3427               	retlw	39
   220     001D                     __end_of_dpowers:
   221     001E                     _ADRESH	set	30
   222     001F                     _ADCON0	set	31
   223     0008                     _PORTD	set	8
   224     00FA                     _GO_nDONE	set	250
   225     004A                     _RE2	set	74
   226     0049                     _RE1	set	73
   227     0048                     _RE0	set	72
   228     0029                     _RA1	set	41
   229     009E                     _ADRESL	set	158
   230     0088                     _TRISD	set	136
   231     0089                     _TRISE	set	137
   232     009F                     _ADCON1	set	159
   233     001D                     STR_1:
   234     001D  342D               	retlw	45	;'-'
   235     001E  342D               	retlw	45	;'-'
   236     001F  3441               	retlw	65	;'A'
   237     0020  3444               	retlw	68	;'D'
   238     0021  3443               	retlw	67	;'C'
   239     0022  3420               	retlw	32	;' '
   240     0023  3452               	retlw	82	;'R'
   241     0024  3465               	retlw	101	;'e'
   242     0025  3461               	retlw	97	;'a'
   243     0026  3464               	retlw	100	;'d'
   244     0027  3469               	retlw	105	;'i'
   245     0028  346E               	retlw	110	;'n'
   246     0029  3467               	retlw	103	;'g'
   247     002A  342D               	retlw	45	;'-'
   248     002B  342D               	retlw	45	;'-'
   249     002C  3400               	retlw	0
   250     002D                     STR_3:
   251     002D  3420               	retlw	32	;' '
   252     002E  3420               	retlw	32	;' '
   253     002F  3420               	retlw	32	;' '
   254     0030  3420               	retlw	32	;' '
   255     0031  3420               	retlw	32	;' '
   256     0032  3420               	retlw	32	;' '
   257     0033  3400               	retlw	0
   258     0034                     STR_2:
   259     0034  3425               	retlw	37	;'%'
   260     0035  3430               	retlw	48	;'0'
   261     0036  3432               	retlw	50	;'2'
   262     0037  3475               	retlw	117	;'u'
   263     0038  3400               	retlw	0
   264                           
   265                           	psect	cinit
   266     07FC                     start_initialization:	
   267                           ; #config settings
   268                           
   269     07FC                     __initialization:
   270     07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273     07FC                     __end_of__initialization:
   274     07FC  0183               	clrf	3
   275     07FD  120A  118A  2E24   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278     0070                     __pcstackCOMMON:
   279     0070                     ?_isdigit:
   280     0070                     ?_LCD_enable:	
   281                           ; 1 bit 
   282                           
   283     0070                     ?_delay:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ??_delay:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ??_isdigit:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ?_init:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ??_init:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_LCD_init:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_LCD_write:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_LCD_clear:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_LCD_line1:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_LCD_line2:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ?_ADC_init:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ??_ADC_init:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_main:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_ADC_read:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?___wmul:	
   326                           ; 2 bytes @ 0x0
   327                           
   328     0070                     ?___lwdiv:	
   329                           ; 2 bytes @ 0x0
   330                           
   331     0070                     _isdigit$558:	
   332                           ; 2 bytes @ 0x0
   333                           
   334     0070                     delay@i:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ADC_read@channel:	
   338                           ; 2 bytes @ 0x0
   339                           
   340     0070                     ___wmul@multiplier:	
   341                           ; 2 bytes @ 0x0
   342                           
   343     0070                     ___lwdiv@divisor:	
   344                           ; 2 bytes @ 0x0
   345                           
   346                           
   347                           ; 2 bytes @ 0x0
   348     0070                     	ds	1
   349     0071                     isdigit@c:
   350                           
   351                           ; 1 bytes @ 0x1
   352     0071                     	ds	1
   353     0072                     ??_LCD_enable:
   354     0072                     ??_LCD_init:	
   355                           ; 1 bytes @ 0x2
   356                           
   357     0072                     ??_LCD_write:	
   358                           ; 1 bytes @ 0x2
   359                           
   360     0072                     ??_LCD_clear:	
   361                           ; 1 bytes @ 0x2
   362                           
   363     0072                     ??_LCD_line1:	
   364                           ; 1 bytes @ 0x2
   365                           
   366     0072                     ??_LCD_line2:	
   367                           ; 1 bytes @ 0x2
   368                           
   369     0072                     ??_ADC_read:	
   370                           ; 1 bytes @ 0x2
   371                           
   372     0072                     LCD_write@x:	
   373                           ; 1 bytes @ 0x2
   374                           
   375     0072                     ___wmul@multiplicand:	
   376                           ; 1 bytes @ 0x2
   377                           
   378     0072                     ___lwdiv@dividend:	
   379                           ; 2 bytes @ 0x2
   380                           
   381                           
   382                           ; 2 bytes @ 0x2
   383     0072                     	ds	1
   384     0073                     ?_writeWord:
   385     0073                     writeWord@word:	
   386                           ; 1 bytes @ 0x3
   387                           
   388     0073                     ADC_read@reading:	
   389                           ; 2 bytes @ 0x3
   390                           
   391                           
   392                           ; 2 bytes @ 0x3
   393     0073                     	ds	1
   394     0074                     ??___wmul:
   395     0074                     ??___lwdiv:	
   396                           ; 1 bytes @ 0x4
   397                           
   398     0074                     ___wmul@product:	
   399                           ; 1 bytes @ 0x4
   400                           
   401     0074                     ___lwdiv@quotient:	
   402                           ; 2 bytes @ 0x4
   403                           
   404                           
   405                           ; 2 bytes @ 0x4
   406     0074                     	ds	1
   407     0075                     ??_writeWord:
   408                           
   409                           ; 1 bytes @ 0x5
   410     0075                     	ds	1
   411     0076                     ___lwdiv@counter:
   412                           
   413                           ; 1 bytes @ 0x6
   414     0076                     	ds	1
   415     0077                     ?___lwmod:
   416     0077                     ___lwmod@divisor:	
   417                           ; 2 bytes @ 0x7
   418                           
   419                           
   420                           ; 2 bytes @ 0x7
   421     0077                     	ds	2
   422     0079                     ___lwmod@dividend:
   423                           
   424                           ; 2 bytes @ 0x9
   425     0079                     	ds	2
   426     007B                     ??___lwmod:
   427     007B                     ___lwmod@counter:	
   428                           ; 1 bytes @ 0xB
   429                           
   430                           
   431                           ; 1 bytes @ 0xB
   432     007B                     	ds	1
   433     007C                     ??_main:
   434                           
   435                           	psect	cstackBANK0
   436     0020                     __pcstackBANK0:	
   437                           ; 1 bytes @ 0xC
   438                           
   439     0020                     ?_sprintf:
   440     0020                     sprintf@f:	
   441                           ; 2 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445     0020                     	ds	3
   446     0023                     ??_sprintf:
   447                           
   448                           ; 1 bytes @ 0x3
   449     0023                     	ds	3
   450     0026                     sprintf@ap:
   451                           
   452                           ; 1 bytes @ 0x6
   453     0026                     	ds	1
   454     0027                     sprintf@flag:
   455                           
   456                           ; 1 bytes @ 0x7
   457     0027                     	ds	1
   458     0028                     sprintf@val:
   459                           
   460                           ; 2 bytes @ 0x8
   461     0028                     	ds	2
   462     002A                     sprintf@prec:
   463                           
   464                           ; 1 bytes @ 0xA
   465     002A                     	ds	1
   466     002B                     sprintf@sp:
   467                           
   468                           ; 1 bytes @ 0xB
   469     002B                     	ds	1
   470     002C                     sprintf@width:
   471                           
   472                           ; 2 bytes @ 0xC
   473     002C                     	ds	2
   474     002E                     sprintf@c:
   475                           
   476                           ; 1 bytes @ 0xE
   477     002E                     	ds	1
   478     002F                     main@buffer:
   479                           
   480                           ; 8 bytes @ 0xF
   481     002F                     	ds	8
   482     0037                     main@reading:
   483                           
   484                           ; 2 bytes @ 0x17
   485     0037                     	ds	2
   486                           
   487                           	psect	maintext
   488     0624                     __pmaintext:	
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 37 in file "display_adc_reading_lcd.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  buffer          8   15[BANK0 ] unsigned char [8]
   499 ;;  reading         2   23[BANK0 ] unsigned int 
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0      10       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0      10       0       0       0
   513 ;;Total ram usage:       10 bytes
   514 ;; Hardware stack levels required when called: 3
   515 ;; This function calls:
   516 ;;		_ADC_init
   517 ;;		_ADC_read
   518 ;;		_LCD_clear
   519 ;;		_LCD_init
   520 ;;		_LCD_line1
   521 ;;		_LCD_line2
   522 ;;		_sprintf
   523 ;;		_writeWord
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529     0624                     _main:	
   530                           ;psect for function _main
   531                           
   532     0624                     l1354:	
   533                           ;incstack = 0
   534                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   535                           
   536                           
   537                           ;display_adc_reading_lcd.c: 38: ;display_adc_reading_lcd.c: 39:         reading = ADC_re
      +                          ad(0);;display_adc_reading_lcd.c: 41: 
   538     0624  120A  118A  2479  120A  118A  	fcall	_ADC_init
   539     0629                     l1356:
   540                           
   541                           ;display_adc_reading_lcd.c: 42: 
   542     0629  120A  118A  2573  120A  118A  	fcall	_LCD_init
   543     062E                     l1358:
   544                           
   545                           ;display_adc_reading_lcd.c: 44: 
   546     062E  120A  118A  249C  120A  118A  	fcall	_LCD_clear
   547     0633                     l1360:
   548                           
   549                           ;display_adc_reading_lcd.c: 45:         writeWord(buffer);
   550     0633  120A  118A  24AC  120A  118A  	fcall	_LCD_line1
   551     0638                     l1362:
   552                           
   553                           ;display_adc_reading_lcd.c: 46:         writeWord("      ");
   554     0638  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   555     0639  00F3               	movwf	writeWord@word
   556     063A  3080               	movlw	128
   557     063B  00F4               	movwf	writeWord@word+1
   558     063C  120A  118A  254D  120A  118A  	fcall	_writeWord
   559     0641                     l1364:
   560     0641  3000               	movlw	0
   561     0642  00F0               	movwf	ADC_read@channel
   562     0643  00F1               	movwf	ADC_read@channel+1
   563     0644  120A  118A  2505  120A  118A  	fcall	_ADC_read
   564     0649  0871               	movf	?_ADC_read+1,w
   565     064A  1283               	bcf	3,5	;RP0=0, select bank0
   566     064B  1303               	bcf	3,6	;RP1=0, select bank0
   567     064C  00B8               	movwf	main@reading+1
   568     064D  0870               	movf	?_ADC_read,w
   569     064E  00B7               	movwf	main@reading
   570     064F                     l1366:
   571     064F  120A  118A  24BC  120A  118A  	fcall	_LCD_line2
   572     0654                     l1368:
   573     0654  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   574     0655  1283               	bcf	3,5	;RP0=0, select bank0
   575     0656  1303               	bcf	3,6	;RP1=0, select bank0
   576     0657  00A0               	movwf	sprintf@f
   577     0658  0838               	movf	main@reading+1,w
   578     0659  00A2               	movwf	?_sprintf+2
   579     065A  0837               	movf	main@reading,w
   580     065B  00A1               	movwf	?_sprintf+1
   581     065C  302F               	movlw	(low (main@buffer| 0))& (0+255)
   582     065D  120A  118A  2678  120A  118A  	fcall	_sprintf
   583     0662                     l1370:
   584     0662  302F               	movlw	(low (main@buffer| 0))& (0+255)
   585     0663  00F3               	movwf	writeWord@word
   586     0664  3000               	movlw	0
   587     0665  00F4               	movwf	writeWord@word+1
   588     0666  120A  118A  254D  120A  118A  	fcall	_writeWord
   589     066B                     l1372:
   590     066B  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   591     066C  00F3               	movwf	writeWord@word
   592     066D  3080               	movlw	128
   593     066E  00F4               	movwf	writeWord@word+1
   594     066F  120A  118A  254D  120A  118A  	fcall	_writeWord
   595     0674  2E41               	goto	l1364
   596     0675  120A  118A  2800   	ljmp	start
   597     0678                     __end_of_main:
   598                           
   599                           	psect	text1
   600     054D                     __ptext1:	
   601 ;; *************** function _writeWord *****************
   602 ;; Defined at:
   603 ;;		line 14 in file "display_adc_reading_lcd.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  word            2    3[COMMON] PTR unsigned char 
   606 ;;		 -> STR_3(7), main@buffer(8), STR_1(16), 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         2       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         2       0       0       0       0
   622 ;;Total ram usage:        2 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 2
   625 ;; This function calls:
   626 ;;		_LCD_write
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     054D                     _writeWord:	
   633                           ;psect for function _writeWord
   634                           
   635     054D                     l1236:	
   636                           ;incstack = 0
   637                           ; Regs used in _writeWord: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   638                           
   639                           
   640                           ;display_adc_reading_lcd.c: 15:     unsigned int reading;
   641     054D  2D62               	goto	l1242
   642     054E                     l1238:
   643                           
   644                           ;display_adc_reading_lcd.c: 16:     ADCON0 &= 0xC5;
   645     054E  0874               	movf	writeWord@word+1,w
   646     054F  00FF               	movwf	btemp+1
   647     0550  0873               	movf	writeWord@word,w
   648     0551  0084               	movwf	4
   649     0552  120A  118A  2003  120A  118A  	fcall	stringtab
   650     0557  120A  118A  24CC  120A  118A  	fcall	_LCD_write
   651     055C                     l1240:
   652                           
   653                           ;display_adc_reading_lcd.c: 17:     ADCON0 |= (channel << 3);
   654     055C  3001               	movlw	1
   655     055D  07F3               	addwf	writeWord@word,f
   656     055E  1803               	skipnc
   657     055F  0AF4               	incf	writeWord@word+1,f
   658     0560  3000               	movlw	0
   659     0561  07F4               	addwf	writeWord@word+1,f
   660     0562                     l1242:
   661                           
   662                           ;display_adc_reading_lcd.c: 15:     unsigned int reading;
   663     0562  0874               	movf	writeWord@word+1,w
   664     0563  1283               	bcf	3,5	;RP0=0, select bank0
   665     0564  1303               	bcf	3,6	;RP1=0, select bank0
   666     0565  00FF               	movwf	btemp+1
   667     0566  0873               	movf	writeWord@word,w
   668     0567  0084               	movwf	4
   669     0568  120A  118A  2003  120A  118A  	fcall	stringtab
   670     056D  3A00               	xorlw	0
   671     056E  1D03               	skipz
   672     056F  2D71               	goto	u571
   673     0570  2D72               	goto	u570
   674     0571                     u571:
   675     0571  2D4E               	goto	l1238
   676     0572                     u570:
   677     0572                     l62:
   678     0572  0008               	return
   679     0573                     __end_of_writeWord:
   680                           
   681                           	psect	text2
   682     04CC                     __ptext2:	
   683 ;; *************** function _LCD_write *****************
   684 ;; Defined at:
   685 ;;		line 43 in file "./lcd.h"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  x               1    wreg     unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  x               1    2[COMMON] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         1       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         1       0       0       0       0
   703 ;;Total ram usage:        1 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 1
   706 ;; This function calls:
   707 ;;		_delay
   708 ;; This function is called by:
   709 ;;		_writeWord
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     04CC                     _LCD_write:	
   714                           ;psect for function _LCD_write
   715                           
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _LCD_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   719                           ;LCD_write@x stored from wreg
   720     04CC  00F2               	movwf	LCD_write@x
   721     04CD                     l1092:
   722                           
   723                           ;./lcd.h: 43: void LCD_write(char x);./lcd.h: 44: {;./lcd.h: 45:  PORTD = x;
   724     04CD  0872               	movf	LCD_write@x,w
   725     04CE  1283               	bcf	3,5	;RP0=0, select bank0
   726     04CF  1303               	bcf	3,6	;RP1=0, select bank0
   727     04D0  0088               	movwf	8	;volatile
   728     04D1                     l1094:
   729                           
   730                           ;./lcd.h: 46:  RE0 = 1;
   731     04D1  1409               	bsf	9,0	;volatile
   732     04D2                     l1096:
   733                           
   734                           ;./lcd.h: 47:  RE1 = 0;
   735     04D2  1089               	bcf	9,1	;volatile
   736     04D3                     l1098:
   737                           
   738                           ;./lcd.h: 48:  RE2 = 0;
   739     04D3  1109               	bcf	9,2	;volatile
   740     04D4                     l1100:
   741                           
   742                           ;./lcd.h: 49:  delay();
   743     04D4  120A  118A  24EF  120A  118A  	fcall	_delay
   744     04D9                     l1102:
   745                           
   746                           ;./lcd.h: 50:  RE2 = 1;
   747     04D9  1283               	bcf	3,5	;RP0=0, select bank0
   748     04DA  1303               	bcf	3,6	;RP1=0, select bank0
   749     04DB  1509               	bsf	9,2	;volatile
   750     04DC                     l39:
   751     04DC  0008               	return
   752     04DD                     __end_of_LCD_write:
   753                           
   754                           	psect	text3
   755     0678                     __ptext3:	
   756 ;; *************** function _sprintf *****************
   757 ;; Defined at:
   758 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  sp              1    wreg     PTR unsigned char 
   761 ;;		 -> main@buffer(8), 
   762 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   763 ;;		 -> STR_2(5), 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   766 ;;		 -> main@buffer(8), 
   767 ;;  tmpval          4    0        struct .
   768 ;;  width           2   12[BANK0 ] int 
   769 ;;  val             2    8[BANK0 ] unsigned int 
   770 ;;  cp              2    0        PTR const unsigned char 
   771 ;;  len             2    0        unsigned int 
   772 ;;  c               1   14[BANK0 ] unsigned char 
   773 ;;  prec            1   10[BANK0 ] char 
   774 ;;  flag            1    7[BANK0 ] unsigned char 
   775 ;;  ap              1    6[BANK0 ] PTR void [1]
   776 ;;		 -> ?_sprintf(2), 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2    0[BANK0 ] int 
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       3       0       0       0
   787 ;;      Locals:         0       9       0       0       0
   788 ;;      Temps:          0       3       0       0       0
   789 ;;      Totals:         0      15       0       0       0
   790 ;;Total ram usage:       15 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 1
   793 ;; This function calls:
   794 ;;		___lwdiv
   795 ;;		___lwmod
   796 ;;		___wmul
   797 ;;		_isdigit
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803     0678                     _sprintf:	
   804                           ;psect for function _sprintf
   805                           
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   809                           ;sprintf@sp stored from wreg
   810     0678  1283               	bcf	3,5	;RP0=0, select bank0
   811     0679  1303               	bcf	3,6	;RP1=0, select bank0
   812     067A  00AB               	movwf	sprintf@sp
   813     067B                     l1254:
   814                           
   815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
   816     067B  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   817     067C  00A6               	movwf	sprintf@ap
   818                           
   819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   820     067D  2FE7               	goto	l1340
   821     067E                     l1256:
   822                           
   823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   824     067E  3025               	movlw	37
   825     067F  062E               	xorwf	sprintf@c,w
   826     0680  1903               	btfsc	3,2
   827     0681  2E83               	goto	u601
   828     0682  2E84               	goto	u600
   829     0683                     u601:
   830     0683  2E8E               	goto	l1262
   831     0684                     u600:
   832     0684                     l1258:
   833                           
   834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   835     0684  082B               	movf	sprintf@sp,w
   836     0685  0084               	movwf	4
   837     0686  082E               	movf	sprintf@c,w
   838     0687  1383               	bcf	3,7	;select IRP bank0
   839     0688  0080               	movwf	0
   840     0689                     l1260:
   841     0689  3001               	movlw	1
   842     068A  00FF               	movwf	btemp+1
   843     068B  087F               	movf	btemp+1,w
   844     068C  07AB               	addwf	sprintf@sp,f
   845                           
   846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   847     068D  2FE7               	goto	l1340
   848     068E                     l1262:
   849                           
   850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
   851     068E  01AC               	clrf	sprintf@width
   852     068F  01AD               	clrf	sprintf@width+1
   853                           
   854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   855     0690  01A7               	clrf	sprintf@flag
   856     0691  2E97               	goto	l1268
   857     0692                     l177:	
   858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
   859                           
   860                           
   861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
   862     0692  1527               	bsf	sprintf@flag,2
   863     0693                     l1264:
   864                           
   865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
   866     0693  3001               	movlw	1
   867     0694  00FF               	movwf	btemp+1
   868     0695  087F               	movf	btemp+1,w
   869     0696  07A0               	addwf	sprintf@f,f
   870     0697                     l1268:	
   871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
   872                           
   873     0697  0820               	movf	sprintf@f,w
   874     0698  0084               	movwf	4
   875     0699  120A  118A  200D  120A  118A  	fcall	stringdir
   876     069E  00A3               	movwf	??_sprintf
   877     069F  01A4               	clrf	??_sprintf+1
   878                           
   879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   880                           ; Switch size 1, requested type "simple"
   881                           ; Number of cases is 1, Range of values is 0 to 0
   882                           ; switch strategies available:
   883                           ; Name         Instructions Cycles
   884                           ; simple_byte            4     3 (average)
   885                           ; direct_byte           11     8 (fixed)
   886                           ; jumptable            260     6 (fixed)
   887                           ;	Chosen strategy is simple_byte
   888     06A0  0824               	movf	??_sprintf+1,w
   889     06A1  3A00               	xorlw	0	; case 0
   890     06A2  1903               	skipnz
   891     06A3  2EA5               	goto	l1414
   892     06A4  2EAA               	goto	l1270
   893     06A5                     l1414:
   894                           
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 1, Range of values is 48 to 48
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte            4     3 (average)
   900                           ; direct_byte           14    11 (fixed)
   901                           ; jumptable            263     9 (fixed)
   902                           ;	Chosen strategy is simple_byte
   903     06A5  0823               	movf	??_sprintf,w
   904     06A6  3A30               	xorlw	48	; case 48
   905     06A7  1903               	skipnz
   906     06A8  2E92               	goto	l177
   907     06A9  2EAA               	goto	l1270
   908     06AA                     l1270:
   909                           
   910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
   911     06AA  0820               	movf	sprintf@f,w
   912     06AB  0084               	movwf	4
   913     06AC  120A  118A  200D  120A  118A  	fcall	stringdir
   914     06B1  120A  118A  24DD  120A  118A  	fcall	_isdigit
   915     06B6  1C03               	btfss	3,0
   916     06B7  2EB9               	goto	u611
   917     06B8  2EBA               	goto	u610
   918     06B9                     u611:
   919     06B9  2F00               	goto	l1286
   920     06BA                     u610:
   921     06BA                     l1272:
   922                           
   923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
   924     06BA  1283               	bcf	3,5	;RP0=0, select bank0
   925     06BB  1303               	bcf	3,6	;RP1=0, select bank0
   926     06BC  01AC               	clrf	sprintf@width
   927     06BD  01AD               	clrf	sprintf@width+1
   928     06BE                     l1274:
   929                           
   930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
   931     06BE  300A               	movlw	10
   932     06BF  00F0               	movwf	___wmul@multiplier
   933     06C0  3000               	movlw	0
   934     06C1  00F1               	movwf	___wmul@multiplier+1
   935     06C2  1283               	bcf	3,5	;RP0=0, select bank0
   936     06C3  1303               	bcf	3,6	;RP1=0, select bank0
   937     06C4  082D               	movf	sprintf@width+1,w
   938     06C5  00F3               	movwf	___wmul@multiplicand+1
   939     06C6  082C               	movf	sprintf@width,w
   940     06C7  00F2               	movwf	___wmul@multiplicand
   941     06C8  120A  118A  2528  120A  118A  	fcall	___wmul
   942     06CD  0871               	movf	?___wmul+1,w
   943     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   944     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   945     06D0  00AD               	movwf	sprintf@width+1
   946     06D1  0870               	movf	?___wmul,w
   947     06D2  00AC               	movwf	sprintf@width
   948     06D3                     l1276:
   949                           
   950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
   951     06D3  0820               	movf	sprintf@f,w
   952     06D4  0084               	movwf	4
   953     06D5  120A  118A  200D  120A  118A  	fcall	stringdir
   954     06DA  3ED0               	addlw	208
   955     06DB  00A3               	movwf	??_sprintf
   956     06DC  30FF               	movlw	255
   957     06DD  1803               	skipnc
   958     06DE  3000               	movlw	0
   959     06DF  00A4               	movwf	??_sprintf+1
   960     06E0  0823               	movf	??_sprintf,w
   961     06E1  07AC               	addwf	sprintf@width,f
   962     06E2  1803               	skipnc
   963     06E3  0AAD               	incf	sprintf@width+1,f
   964     06E4  0824               	movf	??_sprintf+1,w
   965     06E5  07AD               	addwf	sprintf@width+1,f
   966     06E6                     l1278:
   967     06E6  3001               	movlw	1
   968     06E7  00FF               	movwf	btemp+1
   969     06E8  087F               	movf	btemp+1,w
   970     06E9  07A0               	addwf	sprintf@f,f
   971     06EA                     l1280:
   972                           
   973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
   974     06EA  0820               	movf	sprintf@f,w
   975     06EB  0084               	movwf	4
   976     06EC  120A  118A  200D  120A  118A  	fcall	stringdir
   977     06F1  120A  118A  24DD  120A  118A  	fcall	_isdigit
   978     06F6  1803               	btfsc	3,0
   979     06F7  2EF9               	goto	u621
   980     06F8  2EFA               	goto	u620
   981     06F9                     u621:
   982     06F9  2EBE               	goto	l1274
   983     06FA                     u620:
   984     06FA  2F00               	goto	l1286
   985     06FB                     l1282:
   986                           
   987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
   988     06FB  30C0               	movlw	192
   989     06FC  00FF               	movwf	btemp+1
   990     06FD  087F               	movf	btemp+1,w
   991     06FE  04A7               	iorwf	sprintf@flag,f
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
   994     06FF  2F1C               	goto	l1288
   995     0700                     l1286:
   996     0700  3001               	movlw	1
   997     0701  1283               	bcf	3,5	;RP0=0, select bank0
   998     0702  1303               	bcf	3,6	;RP1=0, select bank0
   999     0703  07A0               	addwf	sprintf@f,f
  1000     0704  30FF               	movlw	-1
  1001     0705  0720               	addwf	sprintf@f,w
  1002     0706  0084               	movwf	4
  1003     0707  120A  118A  200D  120A  118A  	fcall	stringdir
  1004     070C  00AE               	movwf	sprintf@c
  1005     070D  00A3               	movwf	??_sprintf
  1006     070E  01A4               	clrf	??_sprintf+1
  1007                           
  1008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1009                           ; Switch size 1, requested type "simple"
  1010                           ; Number of cases is 1, Range of values is 0 to 0
  1011                           ; switch strategies available:
  1012                           ; Name         Instructions Cycles
  1013                           ; simple_byte            4     3 (average)
  1014                           ; direct_byte           11     8 (fixed)
  1015                           ; jumptable            260     6 (fixed)
  1016                           ;	Chosen strategy is simple_byte
  1017     070F  0824               	movf	??_sprintf+1,w
  1018     0710  3A00               	xorlw	0	; case 0
  1019     0711  1903               	skipnz
  1020     0712  2F14               	goto	l1416
  1021     0713  2FE7               	goto	l1340
  1022     0714                     l1416:
  1023                           
  1024                           ; Switch size 1, requested type "simple"
  1025                           ; Number of cases is 2, Range of values is 0 to 117
  1026                           ; switch strategies available:
  1027                           ; Name         Instructions Cycles
  1028                           ; simple_byte            7     4 (average)
  1029                           ; jumptable            260     6 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031     0714  0823               	movf	??_sprintf,w
  1032     0715  3A00               	xorlw	0	; case 0
  1033     0716  1903               	skipnz
  1034     0717  2FF7               	goto	l1342
  1035     0718  3A75               	xorlw	117	; case 117
  1036     0719  1903               	skipnz
  1037     071A  2EFB               	goto	l1282
  1038     071B  2FE7               	goto	l1340
  1039     071C                     l1288:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1042     071C  0826               	movf	sprintf@ap,w
  1043     071D  0084               	movwf	4
  1044     071E  1383               	bcf	3,7	;select IRP bank0
  1045     071F  0800               	movf	0,w
  1046     0720  00A8               	movwf	sprintf@val
  1047     0721  0A84               	incf	4,f
  1048     0722  0800               	movf	0,w
  1049     0723  00A9               	movwf	sprintf@val+1
  1050     0724                     l1290:
  1051     0724  3002               	movlw	2
  1052     0725  00FF               	movwf	btemp+1
  1053     0726  087F               	movf	btemp+1,w
  1054     0727  07A6               	addwf	sprintf@ap,f
  1055     0728                     l1292:
  1056                           
  1057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1058     0728  01AE               	clrf	sprintf@c
  1059     0729  0AAE               	incf	sprintf@c,f
  1060     072A                     l1298:
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1063     072A  082E               	movf	sprintf@c,w
  1064     072B  00A3               	movwf	??_sprintf
  1065     072C  0723               	addwf	??_sprintf,w
  1066     072D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1067     072E  0084               	movwf	4
  1068     072F  120A  118A  200D  120A  118A  	fcall	stringdir
  1069     0734  00A4               	movwf	??_sprintf+1
  1070     0735  120A  118A  200D  120A  118A  	fcall	stringdir
  1071     073A  00A5               	movwf	??_sprintf+2
  1072     073B  0825               	movf	??_sprintf+2,w
  1073     073C  0229               	subwf	sprintf@val+1,w
  1074     073D  1D03               	skipz
  1075     073E  2F41               	goto	u635
  1076     073F  0824               	movf	??_sprintf+1,w
  1077     0740  0228               	subwf	sprintf@val,w
  1078     0741                     u635:
  1079     0741  1803               	skipnc
  1080     0742  2F44               	goto	u631
  1081     0743  2F45               	goto	u630
  1082     0744                     u631:
  1083     0744  2F46               	goto	l1302
  1084     0745                     u630:
  1085     0745  2F50               	goto	l1306
  1086     0746                     l1302:
  1087     0746  3001               	movlw	1
  1088     0747  00FF               	movwf	btemp+1
  1089     0748  087F               	movf	btemp+1,w
  1090     0749  07AE               	addwf	sprintf@c,f
  1091     074A                     l1304:
  1092     074A  3005               	movlw	5
  1093     074B  062E               	xorwf	sprintf@c,w
  1094     074C  1D03               	btfss	3,2
  1095     074D  2F4F               	goto	u641
  1096     074E  2F50               	goto	u640
  1097     074F                     u641:
  1098     074F  2F2A               	goto	l1298
  1099     0750                     u640:
  1100     0750                     l1306:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1103     0750  082D               	movf	sprintf@width+1,w
  1104     0751  3A80               	xorlw	128
  1105     0752  3C80               	sublw	128
  1106     0753  1D03               	skipz
  1107     0754  2F57               	goto	u655
  1108     0755  082C               	movf	sprintf@width,w
  1109     0756  022E               	subwf	sprintf@c,w
  1110     0757                     u655:
  1111     0757  1803               	skipnc
  1112     0758  2F5A               	goto	u651
  1113     0759  2F5B               	goto	u650
  1114     075A                     u651:
  1115     075A  2F67               	goto	l1310
  1116     075B                     u650:
  1117     075B                     l1308:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1120     075B  1283               	bcf	3,5	;RP0=0, select bank0
  1121     075C  1303               	bcf	3,6	;RP1=0, select bank0
  1122     075D  082E               	movf	sprintf@c,w
  1123     075E  00A3               	movwf	??_sprintf
  1124     075F  01A4               	clrf	??_sprintf+1
  1125     0760  0823               	movf	??_sprintf,w
  1126     0761  02AC               	subwf	sprintf@width,f
  1127     0762  0824               	movf	??_sprintf+1,w
  1128     0763  1C03               	skipc
  1129     0764  03AD               	decf	sprintf@width+1,f
  1130     0765  02AD               	subwf	sprintf@width+1,f
  1131     0766  2F6B               	goto	l1312
  1132     0767                     l1310:
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1135     0767  1283               	bcf	3,5	;RP0=0, select bank0
  1136     0768  1303               	bcf	3,6	;RP1=0, select bank0
  1137     0769  01AC               	clrf	sprintf@width
  1138     076A  01AD               	clrf	sprintf@width+1
  1139     076B                     l1312:
  1140                           
  1141                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1142     076B  1D27               	btfss	sprintf@flag,2
  1143     076C  2F6E               	goto	u661
  1144     076D  2F6F               	goto	u660
  1145     076E                     u661:
  1146     076E  2F8B               	goto	l1322
  1147     076F                     u660:
  1148     076F                     l1314:
  1149                           
  1150                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1151     076F  082C               	movf	sprintf@width,w
  1152     0770  042D               	iorwf	sprintf@width+1,w
  1153     0771  1903               	btfsc	3,2
  1154     0772  2F74               	goto	u671
  1155     0773  2F75               	goto	u670
  1156     0774                     u671:
  1157     0774  2FA6               	goto	l1330
  1158     0775                     u670:
  1159     0775                     l1316:
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1162     0775  082B               	movf	sprintf@sp,w
  1163     0776  0084               	movwf	4
  1164     0777  3030               	movlw	48
  1165     0778  1383               	bcf	3,7	;select IRP bank0
  1166     0779  0080               	movwf	0
  1167     077A                     l1318:
  1168     077A  3001               	movlw	1
  1169     077B  00FF               	movwf	btemp+1
  1170     077C  087F               	movf	btemp+1,w
  1171     077D  07AB               	addwf	sprintf@sp,f
  1172     077E                     l1320:
  1173     077E  30FF               	movlw	255
  1174     077F  07AC               	addwf	sprintf@width,f
  1175     0780  1803               	skipnc
  1176     0781  0AAD               	incf	sprintf@width+1,f
  1177     0782  30FF               	movlw	255
  1178     0783  07AD               	addwf	sprintf@width+1,f
  1179     0784  082C               	movf	sprintf@width,w
  1180     0785  042D               	iorwf	sprintf@width+1,w
  1181     0786  1D03               	btfss	3,2
  1182     0787  2F89               	goto	u681
  1183     0788  2F8A               	goto	u680
  1184     0789                     u681:
  1185     0789  2F75               	goto	l1316
  1186     078A                     u680:
  1187     078A  2FA6               	goto	l1330
  1188     078B                     l1322:
  1189                           
  1190                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1191     078B  082C               	movf	sprintf@width,w
  1192     078C  042D               	iorwf	sprintf@width+1,w
  1193     078D  1903               	btfsc	3,2
  1194     078E  2F90               	goto	u691
  1195     078F  2F91               	goto	u690
  1196     0790                     u691:
  1197     0790  2FA6               	goto	l1330
  1198     0791                     u690:
  1199     0791                     l1324:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1202     0791  082B               	movf	sprintf@sp,w
  1203     0792  0084               	movwf	4
  1204     0793  3020               	movlw	32
  1205     0794  1383               	bcf	3,7	;select IRP bank0
  1206     0795  0080               	movwf	0
  1207     0796                     l1326:
  1208     0796  3001               	movlw	1
  1209     0797  00FF               	movwf	btemp+1
  1210     0798  087F               	movf	btemp+1,w
  1211     0799  07AB               	addwf	sprintf@sp,f
  1212     079A                     l1328:
  1213     079A  30FF               	movlw	255
  1214     079B  07AC               	addwf	sprintf@width,f
  1215     079C  1803               	skipnc
  1216     079D  0AAD               	incf	sprintf@width+1,f
  1217     079E  30FF               	movlw	255
  1218     079F  07AD               	addwf	sprintf@width+1,f
  1219     07A0  082C               	movf	sprintf@width,w
  1220     07A1  042D               	iorwf	sprintf@width+1,w
  1221     07A2  1D03               	btfss	3,2
  1222     07A3  2FA5               	goto	u701
  1223     07A4  2FA6               	goto	u700
  1224     07A5                     u701:
  1225     07A5  2F91               	goto	l1324
  1226     07A6                     u700:
  1227     07A6                     l1330:
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1230     07A6  082E               	movf	sprintf@c,w
  1231     07A7  00AA               	movwf	sprintf@prec
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1234     07A8  2FDE               	goto	l1338
  1235     07A9                     l1332:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1238     07A9  300A               	movlw	10
  1239     07AA  00F7               	movwf	___lwmod@divisor
  1240     07AB  3000               	movlw	0
  1241     07AC  00F8               	movwf	___lwmod@divisor+1
  1242     07AD  082A               	movf	sprintf@prec,w
  1243     07AE  00A3               	movwf	??_sprintf
  1244     07AF  0723               	addwf	??_sprintf,w
  1245     07B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1246     07B1  0084               	movwf	4
  1247     07B2  120A  118A  200D  120A  118A  	fcall	stringdir
  1248     07B7  00F0               	movwf	___lwdiv@divisor
  1249     07B8  120A  118A  200D  120A  118A  	fcall	stringdir
  1250     07BD  00F1               	movwf	___lwdiv@divisor+1
  1251     07BE  0829               	movf	sprintf@val+1,w
  1252     07BF  00F3               	movwf	___lwdiv@dividend+1
  1253     07C0  0828               	movf	sprintf@val,w
  1254     07C1  00F2               	movwf	___lwdiv@dividend
  1255     07C2  120A  118A  25E0  120A  118A  	fcall	___lwdiv
  1256     07C7  0871               	movf	?___lwdiv+1,w
  1257     07C8  00FA               	movwf	___lwmod@dividend+1
  1258     07C9  0870               	movf	?___lwdiv,w
  1259     07CA  00F9               	movwf	___lwmod@dividend
  1260     07CB  120A  118A  25A6  120A  118A  	fcall	___lwmod
  1261     07D0  0877               	movf	?___lwmod,w
  1262     07D1  3E30               	addlw	48
  1263     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1264     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1265     07D4  00AE               	movwf	sprintf@c
  1266     07D5                     l1334:
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1269     07D5  082B               	movf	sprintf@sp,w
  1270     07D6  0084               	movwf	4
  1271     07D7  082E               	movf	sprintf@c,w
  1272     07D8  1383               	bcf	3,7	;select IRP bank0
  1273     07D9  0080               	movwf	0
  1274     07DA                     l1336:
  1275     07DA  3001               	movlw	1
  1276     07DB  00FF               	movwf	btemp+1
  1277     07DC  087F               	movf	btemp+1,w
  1278     07DD  07AB               	addwf	sprintf@sp,f
  1279     07DE                     l1338:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1282     07DE  30FF               	movlw	255
  1283     07DF  00FF               	movwf	btemp+1
  1284     07E0  087F               	movf	btemp+1,w
  1285     07E1  07AA               	addwf	sprintf@prec,f
  1286     07E2  0A2A               	incf	sprintf@prec,w
  1287     07E3  1D03               	btfss	3,2
  1288     07E4  2FE6               	goto	u711
  1289     07E5  2FE7               	goto	u710
  1290     07E6                     u711:
  1291     07E6  2FA9               	goto	l1332
  1292     07E7                     u710:
  1293     07E7                     l1340:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1296     07E7  3001               	movlw	1
  1297     07E8  07A0               	addwf	sprintf@f,f
  1298     07E9  30FF               	movlw	-1
  1299     07EA  0720               	addwf	sprintf@f,w
  1300     07EB  0084               	movwf	4
  1301     07EC  120A  118A  200D  120A  118A  	fcall	stringdir
  1302     07F1  00AE               	movwf	sprintf@c
  1303     07F2  082E               	movf	sprintf@c,w
  1304     07F3  1D03               	btfss	3,2
  1305     07F4  2FF6               	goto	u721
  1306     07F5  2FF7               	goto	u720
  1307     07F6                     u721:
  1308     07F6  2E7E               	goto	l1256
  1309     07F7                     u720:
  1310     07F7                     l1342:
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1313     07F7  082B               	movf	sprintf@sp,w
  1314     07F8  0084               	movwf	4
  1315     07F9  1383               	bcf	3,7	;select IRP bank0
  1316     07FA  0180               	clrf	0
  1317     07FB                     l207:
  1318     07FB  0008               	return
  1319     07FC                     __end_of_sprintf:
  1320                           
  1321                           	psect	text4
  1322     04DD                     __ptext4:	
  1323 ;; *************** function _isdigit *****************
  1324 ;; Defined at:
  1325 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  c               1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  c               1    1[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;		None               void
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         2       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         2       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_sprintf
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352     04DD                     _isdigit:	
  1353                           ;psect for function _isdigit
  1354                           
  1355                           
  1356                           ;incstack = 0
  1357                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1358                           ;isdigit@c stored from wreg
  1359     04DD  00F1               	movwf	isdigit@c
  1360     04DE                     l1104:
  1361     04DE  01F0               	clrf	_isdigit$558
  1362     04DF                     l1106:
  1363     04DF  303A               	movlw	58
  1364     04E0  0271               	subwf	isdigit@c,w
  1365     04E1  1803               	skipnc
  1366     04E2  2CE4               	goto	u381
  1367     04E3  2CE5               	goto	u380
  1368     04E4                     u381:
  1369     04E4  2CED               	goto	l1112
  1370     04E5                     u380:
  1371     04E5                     l1108:
  1372     04E5  3030               	movlw	48
  1373     04E6  0271               	subwf	isdigit@c,w
  1374     04E7  1C03               	skipc
  1375     04E8  2CEA               	goto	u391
  1376     04E9  2CEB               	goto	u390
  1377     04EA                     u391:
  1378     04EA  2CED               	goto	l1112
  1379     04EB                     u390:
  1380     04EB                     l1110:
  1381     04EB  01F0               	clrf	_isdigit$558
  1382     04EC  0AF0               	incf	_isdigit$558,f
  1383     04ED                     l1112:
  1384     04ED  0C70               	rrf	_isdigit$558,w
  1385     04EE                     l664:
  1386     04EE  0008               	return
  1387     04EF                     __end_of_isdigit:
  1388                           
  1389                           	psect	text5
  1390     0528                     __ptext5:	
  1391 ;; *************** function ___wmul *****************
  1392 ;; Defined at:
  1393 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  multiplier      2    0[COMMON] unsigned int 
  1396 ;;  multiplicand    2    2[COMMON] unsigned int 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  product         2    4[COMMON] unsigned int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2    0[COMMON] unsigned int 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         4       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0
  1411 ;;      Totals:         6       0       0       0       0
  1412 ;;Total ram usage:        6 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_sprintf
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421     0528                     ___wmul:	
  1422                           ;psect for function ___wmul
  1423                           
  1424     0528                     l1116:	
  1425                           ;incstack = 0
  1426                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1427                           
  1428     0528  01F4               	clrf	___wmul@product
  1429     0529  01F5               	clrf	___wmul@product+1
  1430     052A                     l1118:
  1431     052A  1C70               	btfss	___wmul@multiplier,0
  1432     052B  2D2D               	goto	u401
  1433     052C  2D2E               	goto	u400
  1434     052D                     u401:
  1435     052D  2D34               	goto	l211
  1436     052E                     u400:
  1437     052E                     l1120:
  1438     052E  0872               	movf	___wmul@multiplicand,w
  1439     052F  07F4               	addwf	___wmul@product,f
  1440     0530  1803               	skipnc
  1441     0531  0AF5               	incf	___wmul@product+1,f
  1442     0532  0873               	movf	___wmul@multiplicand+1,w
  1443     0533  07F5               	addwf	___wmul@product+1,f
  1444     0534                     l211:
  1445     0534  3001               	movlw	1
  1446     0535                     u415:
  1447     0535  1003               	clrc
  1448     0536  0DF2               	rlf	___wmul@multiplicand,f
  1449     0537  0DF3               	rlf	___wmul@multiplicand+1,f
  1450     0538  3EFF               	addlw	-1
  1451     0539  1D03               	skipz
  1452     053A  2D35               	goto	u415
  1453     053B                     l1122:
  1454     053B  3001               	movlw	1
  1455     053C                     u425:
  1456     053C  1003               	clrc
  1457     053D  0CF1               	rrf	___wmul@multiplier+1,f
  1458     053E  0CF0               	rrf	___wmul@multiplier,f
  1459     053F  3EFF               	addlw	-1
  1460     0540  1D03               	skipz
  1461     0541  2D3C               	goto	u425
  1462     0542                     l1124:
  1463     0542  0870               	movf	___wmul@multiplier,w
  1464     0543  0471               	iorwf	___wmul@multiplier+1,w
  1465     0544  1D03               	btfss	3,2
  1466     0545  2D47               	goto	u431
  1467     0546  2D48               	goto	u430
  1468     0547                     u431:
  1469     0547  2D2A               	goto	l1118
  1470     0548                     u430:
  1471     0548                     l1126:
  1472     0548  0875               	movf	___wmul@product+1,w
  1473     0549  00F1               	movwf	?___wmul+1
  1474     054A  0874               	movf	___wmul@product,w
  1475     054B  00F0               	movwf	?___wmul
  1476     054C                     l213:
  1477     054C  0008               	return
  1478     054D                     __end_of___wmul:
  1479                           
  1480                           	psect	text6
  1481     05A6                     __ptext6:	
  1482 ;; *************** function ___lwmod *****************
  1483 ;; Defined at:
  1484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  divisor         2    7[COMMON] unsigned int 
  1487 ;;  dividend        2    9[COMMON] unsigned int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  counter         1   11[COMMON] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  2    7[COMMON] unsigned int 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, btemp+1
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         4       0       0       0       0
  1500 ;;      Locals:         1       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         5       0       0       0       0
  1503 ;;Total ram usage:        5 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_sprintf
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     05A6                     ___lwmod:	
  1513                           ;psect for function ___lwmod
  1514                           
  1515     05A6                     l1156:	
  1516                           ;incstack = 0
  1517                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1518                           
  1519     05A6  0877               	movf	___lwmod@divisor,w
  1520     05A7  0478               	iorwf	___lwmod@divisor+1,w
  1521     05A8  1903               	btfsc	3,2
  1522     05A9  2DAB               	goto	u511
  1523     05AA  2DAC               	goto	u510
  1524     05AB                     u511:
  1525     05AB  2DDB               	goto	l1174
  1526     05AC                     u510:
  1527     05AC                     l1158:
  1528     05AC  01FB               	clrf	___lwmod@counter
  1529     05AD  0AFB               	incf	___lwmod@counter,f
  1530     05AE  2DBA               	goto	l1164
  1531     05AF                     l1160:
  1532     05AF  3001               	movlw	1
  1533     05B0                     u525:
  1534     05B0  1003               	clrc
  1535     05B1  0DF7               	rlf	___lwmod@divisor,f
  1536     05B2  0DF8               	rlf	___lwmod@divisor+1,f
  1537     05B3  3EFF               	addlw	-1
  1538     05B4  1D03               	skipz
  1539     05B5  2DB0               	goto	u525
  1540     05B6                     l1162:
  1541     05B6  3001               	movlw	1
  1542     05B7  00FF               	movwf	btemp+1
  1543     05B8  087F               	movf	btemp+1,w
  1544     05B9  07FB               	addwf	___lwmod@counter,f
  1545     05BA                     l1164:
  1546     05BA  1FF8               	btfss	___lwmod@divisor+1,7
  1547     05BB  2DBD               	goto	u531
  1548     05BC  2DBE               	goto	u530
  1549     05BD                     u531:
  1550     05BD  2DAF               	goto	l1160
  1551     05BE                     u530:
  1552     05BE                     l1166:
  1553     05BE  0878               	movf	___lwmod@divisor+1,w
  1554     05BF  027A               	subwf	___lwmod@dividend+1,w
  1555     05C0  1D03               	skipz
  1556     05C1  2DC4               	goto	u545
  1557     05C2  0877               	movf	___lwmod@divisor,w
  1558     05C3  0279               	subwf	___lwmod@dividend,w
  1559     05C4                     u545:
  1560     05C4  1C03               	skipc
  1561     05C5  2DC7               	goto	u541
  1562     05C6  2DC8               	goto	u540
  1563     05C7                     u541:
  1564     05C7  2DCE               	goto	l1170
  1565     05C8                     u540:
  1566     05C8                     l1168:
  1567     05C8  0877               	movf	___lwmod@divisor,w
  1568     05C9  02F9               	subwf	___lwmod@dividend,f
  1569     05CA  0878               	movf	___lwmod@divisor+1,w
  1570     05CB  1C03               	skipc
  1571     05CC  03FA               	decf	___lwmod@dividend+1,f
  1572     05CD  02FA               	subwf	___lwmod@dividend+1,f
  1573     05CE                     l1170:
  1574     05CE  3001               	movlw	1
  1575     05CF                     u555:
  1576     05CF  1003               	clrc
  1577     05D0  0CF8               	rrf	___lwmod@divisor+1,f
  1578     05D1  0CF7               	rrf	___lwmod@divisor,f
  1579     05D2  3EFF               	addlw	-1
  1580     05D3  1D03               	skipz
  1581     05D4  2DCF               	goto	u555
  1582     05D5                     l1172:
  1583     05D5  3001               	movlw	1
  1584     05D6  02FB               	subwf	___lwmod@counter,f
  1585     05D7  1D03               	btfss	3,2
  1586     05D8  2DDA               	goto	u561
  1587     05D9  2DDB               	goto	u560
  1588     05DA                     u561:
  1589     05DA  2DBE               	goto	l1166
  1590     05DB                     u560:
  1591     05DB                     l1174:
  1592     05DB  087A               	movf	___lwmod@dividend+1,w
  1593     05DC  00F8               	movwf	?___lwmod+1
  1594     05DD  0879               	movf	___lwmod@dividend,w
  1595     05DE  00F7               	movwf	?___lwmod
  1596     05DF                     l493:
  1597     05DF  0008               	return
  1598     05E0                     __end_of___lwmod:
  1599                           
  1600                           	psect	text7
  1601     05E0                     __ptext7:	
  1602 ;; *************** function ___lwdiv *****************
  1603 ;; Defined at:
  1604 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  divisor         2    0[COMMON] unsigned int 
  1607 ;;  dividend        2    2[COMMON] unsigned int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  quotient        2    4[COMMON] unsigned int 
  1610 ;;  counter         1    6[COMMON] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  2    0[COMMON] unsigned int 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, btemp+1
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         4       0       0       0       0
  1621 ;;      Locals:         3       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         7       0       0       0       0
  1624 ;;Total ram usage:        7 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_sprintf
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     05E0                     ___lwdiv:	
  1634                           ;psect for function ___lwdiv
  1635                           
  1636     05E0                     l1130:	
  1637                           ;incstack = 0
  1638                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1639                           
  1640     05E0  01F4               	clrf	___lwdiv@quotient
  1641     05E1  01F5               	clrf	___lwdiv@quotient+1
  1642     05E2                     l1132:
  1643     05E2  0870               	movf	___lwdiv@divisor,w
  1644     05E3  0471               	iorwf	___lwdiv@divisor+1,w
  1645     05E4  1903               	btfsc	3,2
  1646     05E5  2DE7               	goto	u441
  1647     05E6  2DE8               	goto	u440
  1648     05E7                     u441:
  1649     05E7  2E1F               	goto	l1152
  1650     05E8                     u440:
  1651     05E8                     l1134:
  1652     05E8  01F6               	clrf	___lwdiv@counter
  1653     05E9  0AF6               	incf	___lwdiv@counter,f
  1654     05EA  2DF6               	goto	l1140
  1655     05EB                     l1136:
  1656     05EB  3001               	movlw	1
  1657     05EC                     u455:
  1658     05EC  1003               	clrc
  1659     05ED  0DF0               	rlf	___lwdiv@divisor,f
  1660     05EE  0DF1               	rlf	___lwdiv@divisor+1,f
  1661     05EF  3EFF               	addlw	-1
  1662     05F0  1D03               	skipz
  1663     05F1  2DEC               	goto	u455
  1664     05F2                     l1138:
  1665     05F2  3001               	movlw	1
  1666     05F3  00FF               	movwf	btemp+1
  1667     05F4  087F               	movf	btemp+1,w
  1668     05F5  07F6               	addwf	___lwdiv@counter,f
  1669     05F6                     l1140:
  1670     05F6  1FF1               	btfss	___lwdiv@divisor+1,7
  1671     05F7  2DF9               	goto	u461
  1672     05F8  2DFA               	goto	u460
  1673     05F9                     u461:
  1674     05F9  2DEB               	goto	l1136
  1675     05FA                     u460:
  1676     05FA                     l1142:
  1677     05FA  3001               	movlw	1
  1678     05FB                     u475:
  1679     05FB  1003               	clrc
  1680     05FC  0DF4               	rlf	___lwdiv@quotient,f
  1681     05FD  0DF5               	rlf	___lwdiv@quotient+1,f
  1682     05FE  3EFF               	addlw	-1
  1683     05FF  1D03               	skipz
  1684     0600  2DFB               	goto	u475
  1685     0601  0871               	movf	___lwdiv@divisor+1,w
  1686     0602  0273               	subwf	___lwdiv@dividend+1,w
  1687     0603  1D03               	skipz
  1688     0604  2E07               	goto	u485
  1689     0605  0870               	movf	___lwdiv@divisor,w
  1690     0606  0272               	subwf	___lwdiv@dividend,w
  1691     0607                     u485:
  1692     0607  1C03               	skipc
  1693     0608  2E0A               	goto	u481
  1694     0609  2E0B               	goto	u480
  1695     060A                     u481:
  1696     060A  2E12               	goto	l1148
  1697     060B                     u480:
  1698     060B                     l1144:
  1699     060B  0870               	movf	___lwdiv@divisor,w
  1700     060C  02F2               	subwf	___lwdiv@dividend,f
  1701     060D  0871               	movf	___lwdiv@divisor+1,w
  1702     060E  1C03               	skipc
  1703     060F  03F3               	decf	___lwdiv@dividend+1,f
  1704     0610  02F3               	subwf	___lwdiv@dividend+1,f
  1705     0611                     l1146:
  1706     0611  1474               	bsf	___lwdiv@quotient,0
  1707     0612                     l1148:
  1708     0612  3001               	movlw	1
  1709     0613                     u495:
  1710     0613  1003               	clrc
  1711     0614  0CF1               	rrf	___lwdiv@divisor+1,f
  1712     0615  0CF0               	rrf	___lwdiv@divisor,f
  1713     0616  3EFF               	addlw	-1
  1714     0617  1D03               	skipz
  1715     0618  2E13               	goto	u495
  1716     0619                     l1150:
  1717     0619  3001               	movlw	1
  1718     061A  02F6               	subwf	___lwdiv@counter,f
  1719     061B  1D03               	btfss	3,2
  1720     061C  2E1E               	goto	u501
  1721     061D  2E1F               	goto	u500
  1722     061E                     u501:
  1723     061E  2DFA               	goto	l1142
  1724     061F                     u500:
  1725     061F                     l1152:
  1726     061F  0875               	movf	___lwdiv@quotient+1,w
  1727     0620  00F1               	movwf	?___lwdiv+1
  1728     0621  0874               	movf	___lwdiv@quotient,w
  1729     0622  00F0               	movwf	?___lwdiv
  1730     0623                     l483:
  1731     0623  0008               	return
  1732     0624                     __end_of___lwdiv:
  1733                           
  1734                           	psect	text8
  1735     04BC                     __ptext8:	
  1736 ;; *************** function _LCD_line2 *****************
  1737 ;; Defined at:
  1738 ;;		line 70 in file "./lcd.h"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		_delay
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766     04BC                     _LCD_line2:	
  1767                           ;psect for function _LCD_line2
  1768                           
  1769     04BC                     l1224:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _LCD_line2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1772                           
  1773                           
  1774                           ;./lcd.h: 71:     PORTD = 0xC0;
  1775     04BC  30C0               	movlw	192
  1776     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1777     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1778     04BF  0088               	movwf	8	;volatile
  1779     04C0                     l1226:
  1780                           
  1781                           ;./lcd.h: 72:     RE0 = 0;
  1782     04C0  1009               	bcf	9,0	;volatile
  1783     04C1                     l1228:
  1784                           
  1785                           ;./lcd.h: 73:     RE1 = 0;
  1786     04C1  1089               	bcf	9,1	;volatile
  1787     04C2                     l1230:
  1788                           
  1789                           ;./lcd.h: 74:     RE2=0;
  1790     04C2  1109               	bcf	9,2	;volatile
  1791     04C3                     l1232:
  1792                           
  1793                           ;./lcd.h: 75:     delay();
  1794     04C3  120A  118A  24EF  120A  118A  	fcall	_delay
  1795     04C8                     l1234:
  1796                           
  1797                           ;./lcd.h: 76:  RE2 = 1;
  1798     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  1799     04C9  1303               	bcf	3,6	;RP1=0, select bank0
  1800     04CA  1509               	bsf	9,2	;volatile
  1801     04CB                     l48:
  1802     04CB  0008               	return
  1803     04CC                     __end_of_LCD_line2:
  1804                           
  1805                           	psect	text9
  1806     04AC                     __ptext9:	
  1807 ;; *************** function _LCD_line1 *****************
  1808 ;; Defined at:
  1809 ;;		line 62 in file "./lcd.h"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 1
  1830 ;; This function calls:
  1831 ;;		_delay
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837     04AC                     _LCD_line1:	
  1838                           ;psect for function _LCD_line1
  1839                           
  1840     04AC                     l1212:	
  1841                           ;incstack = 0
  1842                           ; Regs used in _LCD_line1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1843                           
  1844                           
  1845                           ;./lcd.h: 63:     PORTD = 0x02;
  1846     04AC  3002               	movlw	2
  1847     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1848     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1849     04AF  0088               	movwf	8	;volatile
  1850     04B0                     l1214:
  1851                           
  1852                           ;./lcd.h: 64:     RE0 = 0;
  1853     04B0  1009               	bcf	9,0	;volatile
  1854     04B1                     l1216:
  1855                           
  1856                           ;./lcd.h: 65:     RE1 = 0;
  1857     04B1  1089               	bcf	9,1	;volatile
  1858     04B2                     l1218:
  1859                           
  1860                           ;./lcd.h: 66:     RE2=0;
  1861     04B2  1109               	bcf	9,2	;volatile
  1862     04B3                     l1220:
  1863                           
  1864                           ;./lcd.h: 67:     delay();
  1865     04B3  120A  118A  24EF  120A  118A  	fcall	_delay
  1866     04B8                     l1222:
  1867                           
  1868                           ;./lcd.h: 68:  RE2 = 1;
  1869     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1870     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1871     04BA  1509               	bsf	9,2	;volatile
  1872     04BB                     l45:
  1873     04BB  0008               	return
  1874     04BC                     __end_of_LCD_line1:
  1875                           
  1876                           	psect	text10
  1877     0573                     __ptext10:	
  1878 ;; *************** function _LCD_init *****************
  1879 ;; Defined at:
  1880 ;;		line 28 in file "./lcd.h"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 2
  1901 ;; This function calls:
  1902 ;;		_LCD_enable
  1903 ;;		_init
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909     0573                     _LCD_init:	
  1910                           ;psect for function _LCD_init
  1911                           
  1912     0573                     l1178:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1915                           
  1916                           
  1917                           ;./lcd.h: 30:     init();
  1918     0573  120A  118A  2482  120A  118A  	fcall	_init
  1919     0578                     l1180:
  1920                           
  1921                           ;./lcd.h: 31:  PORTD = 0X1;
  1922     0578  3001               	movlw	1
  1923     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1924     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1925     057B  0088               	movwf	8	;volatile
  1926     057C                     l1182:
  1927                           
  1928                           ;./lcd.h: 32:  LCD_enable();
  1929     057C  120A  118A  248E  120A  118A  	fcall	_LCD_enable
  1930     0581                     l1184:
  1931                           
  1932                           ;./lcd.h: 33:  PORTD = 0X38;
  1933     0581  3038               	movlw	56
  1934     0582  1283               	bcf	3,5	;RP0=0, select bank0
  1935     0583  1303               	bcf	3,6	;RP1=0, select bank0
  1936     0584  0088               	movwf	8	;volatile
  1937     0585                     l1186:
  1938                           
  1939                           ;./lcd.h: 34:  LCD_enable();
  1940     0585  120A  118A  248E  120A  118A  	fcall	_LCD_enable
  1941     058A                     l1188:
  1942                           
  1943                           ;./lcd.h: 35:  PORTD = 0X0e;
  1944     058A  300E               	movlw	14
  1945     058B  1283               	bcf	3,5	;RP0=0, select bank0
  1946     058C  1303               	bcf	3,6	;RP1=0, select bank0
  1947     058D  0088               	movwf	8	;volatile
  1948     058E                     l1190:
  1949                           
  1950                           ;./lcd.h: 36:  LCD_enable();
  1951     058E  120A  118A  248E  120A  118A  	fcall	_LCD_enable
  1952     0593                     l1192:
  1953                           
  1954                           ;./lcd.h: 37:  PORTD = 0X06;
  1955     0593  3006               	movlw	6
  1956     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1957     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1958     0596  0088               	movwf	8	;volatile
  1959     0597                     l1194:
  1960                           
  1961                           ;./lcd.h: 38:  LCD_enable();
  1962     0597  120A  118A  248E  120A  118A  	fcall	_LCD_enable
  1963     059C                     l1196:
  1964                           
  1965                           ;./lcd.h: 39:  PORTD = 0X80;
  1966     059C  3080               	movlw	128
  1967     059D  1283               	bcf	3,5	;RP0=0, select bank0
  1968     059E  1303               	bcf	3,6	;RP1=0, select bank0
  1969     059F  0088               	movwf	8	;volatile
  1970     05A0                     l1198:
  1971                           
  1972                           ;./lcd.h: 40:  LCD_enable();
  1973     05A0  120A  118A  248E  120A  118A  	fcall	_LCD_enable
  1974     05A5                     l36:
  1975     05A5  0008               	return
  1976     05A6                     __end_of_LCD_init:
  1977                           
  1978                           	psect	text11
  1979     0482                     __ptext11:	
  1980 ;; *************** function _init *****************
  1981 ;; Defined at:
  1982 ;;		line 20 in file "./lcd.h"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_LCD_init
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009     0482                     _init:	
  2010                           ;psect for function _init
  2011                           
  2012     0482                     l1078:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _init: [wreg+status,2]
  2015                           
  2016                           
  2017                           ;./lcd.h: 22:  ADCON1 = 0X07;
  2018     0482  3007               	movlw	7
  2019     0483  1683               	bsf	3,5	;RP0=1, select bank1
  2020     0484  1303               	bcf	3,6	;RP1=0, select bank1
  2021     0485  009F               	movwf	31	;volatile
  2022     0486                     l1080:
  2023                           
  2024                           ;./lcd.h: 23:     RA1=1;
  2025     0486  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0487  1303               	bcf	3,6	;RP1=0, select bank0
  2027     0488  1485               	bsf	5,1	;volatile
  2028     0489                     l1082:
  2029                           
  2030                           ;./lcd.h: 24:  TRISE = 0X00;
  2031     0489  1683               	bsf	3,5	;RP0=1, select bank1
  2032     048A  1303               	bcf	3,6	;RP1=0, select bank1
  2033     048B  0189               	clrf	9	;volatile
  2034     048C                     l1084:
  2035                           
  2036                           ;./lcd.h: 25:  TRISD = 0X00;
  2037     048C  0188               	clrf	8	;volatile
  2038     048D                     l33:
  2039     048D  0008               	return
  2040     048E                     __end_of_init:
  2041                           
  2042                           	psect	text12
  2043     048E                     __ptext12:	
  2044 ;; *************** function _LCD_enable *****************
  2045 ;; Defined at:
  2046 ;;		line 82 in file "./lcd.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 1
  2067 ;; This function calls:
  2068 ;;		_delay
  2069 ;; This function is called by:
  2070 ;;		_LCD_init
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     048E                     _LCD_enable:	
  2075                           ;psect for function _LCD_enable
  2076                           
  2077     048E                     l1086:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2080                           
  2081                           
  2082                           ;./lcd.h: 84:  RE0 = 0;
  2083     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2084     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2085     0490  1009               	bcf	9,0	;volatile
  2086                           
  2087                           ;./lcd.h: 85:  RE1 = 0;
  2088     0491  1089               	bcf	9,1	;volatile
  2089                           
  2090                           ;./lcd.h: 86:  RE2 = 0;
  2091     0492  1109               	bcf	9,2	;volatile
  2092     0493                     l1088:
  2093                           
  2094                           ;./lcd.h: 87:  delay();
  2095     0493  120A  118A  24EF  120A  118A  	fcall	_delay
  2096     0498                     l1090:
  2097                           
  2098                           ;./lcd.h: 88:  RE2 = 1;
  2099     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2101     049A  1509               	bsf	9,2	;volatile
  2102     049B                     l51:
  2103     049B  0008               	return
  2104     049C                     __end_of_LCD_enable:
  2105                           
  2106                           	psect	text13
  2107     049C                     __ptext13:	
  2108 ;; *************** function _LCD_clear *****************
  2109 ;; Defined at:
  2110 ;;		line 53 in file "./lcd.h"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 1
  2131 ;; This function calls:
  2132 ;;		_delay
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138     049C                     _LCD_clear:	
  2139                           ;psect for function _LCD_clear
  2140                           
  2141     049C                     l1200:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2144                           
  2145                           
  2146                           ;./lcd.h: 54:     PORTD = 0x01;
  2147     049C  3001               	movlw	1
  2148     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2149     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2150     049F  0088               	movwf	8	;volatile
  2151     04A0                     l1202:
  2152                           
  2153                           ;./lcd.h: 55:     RE0 = 0;
  2154     04A0  1009               	bcf	9,0	;volatile
  2155     04A1                     l1204:
  2156                           
  2157                           ;./lcd.h: 56:     RE1 = 0;
  2158     04A1  1089               	bcf	9,1	;volatile
  2159     04A2                     l1206:
  2160                           
  2161                           ;./lcd.h: 57:     RE2=0;
  2162     04A2  1109               	bcf	9,2	;volatile
  2163     04A3                     l1208:
  2164                           
  2165                           ;./lcd.h: 58:     delay();
  2166     04A3  120A  118A  24EF  120A  118A  	fcall	_delay
  2167     04A8                     l1210:
  2168                           
  2169                           ;./lcd.h: 59:  RE2 = 1;
  2170     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2171     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2172     04AA  1509               	bsf	9,2	;volatile
  2173     04AB                     l42:
  2174     04AB  0008               	return
  2175     04AC                     __end_of_LCD_clear:
  2176                           
  2177                           	psect	text14
  2178     04EF                     __ptext14:	
  2179 ;; *************** function _delay *****************
  2180 ;; Defined at:
  2181 ;;		line 91 in file "./lcd.h"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  i               2    0[COMMON] int 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, btemp+1
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         2       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0
  2198 ;;      Totals:         2       0       0       0       0
  2199 ;;Total ram usage:        2 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_LCD_write
  2205 ;;		_LCD_clear
  2206 ;;		_LCD_line1
  2207 ;;		_LCD_line2
  2208 ;;		_LCD_enable
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     04EF                     _delay:	
  2213                           ;psect for function _delay
  2214                           
  2215     04EF                     l1068:	
  2216                           ;incstack = 0
  2217                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2218                           
  2219                           
  2220                           ;./lcd.h: 93:  int i;;./lcd.h: 94:  for (i = 0;i < 5000;i++);
  2221     04EF  01F0               	clrf	delay@i
  2222     04F0  01F1               	clrf	delay@i+1
  2223     04F1                     l1074:
  2224     04F1  3001               	movlw	1
  2225     04F2  07F0               	addwf	delay@i,f
  2226     04F3  1803               	skipnc
  2227     04F4  0AF1               	incf	delay@i+1,f
  2228     04F5  3000               	movlw	0
  2229     04F6  07F1               	addwf	delay@i+1,f
  2230     04F7                     l1076:
  2231     04F7  0871               	movf	delay@i+1,w
  2232     04F8  3A80               	xorlw	128
  2233     04F9  00FF               	movwf	btemp+1
  2234     04FA  3093               	movlw	147
  2235     04FB  027F               	subwf	btemp+1,w
  2236     04FC  1D03               	skipz
  2237     04FD  2D00               	goto	u375
  2238     04FE  3088               	movlw	136
  2239     04FF  0270               	subwf	delay@i,w
  2240     0500                     u375:
  2241     0500  1C03               	skipc
  2242     0501  2D03               	goto	u371
  2243     0502  2D04               	goto	u370
  2244     0503                     u371:
  2245     0503  2CF1               	goto	l1074
  2246     0504                     u370:
  2247     0504                     l56:
  2248     0504  0008               	return
  2249     0505                     __end_of_delay:
  2250                           
  2251                           	psect	text15
  2252     0505                     __ptext15:	
  2253 ;; *************** function _ADC_read *****************
  2254 ;; Defined at:
  2255 ;;		line 26 in file "display_adc_reading_lcd.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  channel         2    0[COMMON] unsigned int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  reading         2    3[COMMON] unsigned int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    0[COMMON] unsigned int 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, btemp+1
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         2       0       0       0       0
  2270 ;;      Locals:         2       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0
  2272 ;;      Totals:         5       0       0       0       0
  2273 ;;Total ram usage:        5 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282     0505                     _ADC_read:	
  2283                           ;psect for function _ADC_read
  2284                           
  2285     0505                     l1246:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _ADC_read: [wreg+status,2+status,0+btemp+1]
  2288                           
  2289                           
  2290                           ;display_adc_reading_lcd.c: 27:     char buffer[8];;display_adc_reading_lcd.c: 28: 
  2291     0505  30C5               	movlw	197
  2292     0506  00FF               	movwf	btemp+1
  2293     0507  087F               	movf	btemp+1,w
  2294     0508  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0509  1303               	bcf	3,6	;RP1=0, select bank0
  2296     050A  059F               	andwf	31,f	;volatile
  2297                           
  2298                           ;display_adc_reading_lcd.c: 29:     ADC_init();
  2299     050B  0870               	movf	ADC_read@channel,w	;volatile
  2300     050C  00F2               	movwf	??_ADC_read
  2301     050D  3002               	movlw	2
  2302     050E                     u585:
  2303     050E  1003               	clrc
  2304     050F  0DF2               	rlf	??_ADC_read,f
  2305     0510  3EFF               	addlw	-1
  2306     0511  1D03               	skipz
  2307     0512  2D0E               	goto	u585
  2308     0513  1003               	clrc
  2309     0514  0D72               	rlf	??_ADC_read,w
  2310     0515  00FF               	movwf	btemp+1
  2311     0516  087F               	movf	btemp+1,w
  2312     0517  049F               	iorwf	31,f	;volatile
  2313     0518                     l1248:
  2314                           
  2315                           ;display_adc_reading_lcd.c: 30:     LCD_init();
  2316     0518  151F               	bsf	31,2	;volatile
  2317     0519                     l68:	
  2318                           ;display_adc_reading_lcd.c: 31: 
  2319                           
  2320     0519  191F               	btfsc	31,2	;volatile
  2321     051A  2D1C               	goto	u591
  2322     051B  2D1D               	goto	u590
  2323     051C                     u591:
  2324     051C  2D19               	goto	l68
  2325     051D                     u590:
  2326     051D                     l1250:
  2327                           
  2328                           ;display_adc_reading_lcd.c: 33:     LCD_line1();
  2329     051D  081E               	movf	30,w	;volatile
  2330     051E  00F4               	movwf	ADC_read@reading+1
  2331     051F  1683               	bsf	3,5	;RP0=1, select bank1
  2332     0520  1303               	bcf	3,6	;RP1=0, select bank1
  2333     0521  081E               	movf	30,w	;volatile
  2334     0522  00F3               	movwf	ADC_read@reading
  2335                           
  2336                           ;display_adc_reading_lcd.c: 34:     writeWord("--ADC Reading--");
  2337     0523  0874               	movf	ADC_read@reading+1,w
  2338     0524  00F1               	movwf	?_ADC_read+1
  2339     0525  0873               	movf	ADC_read@reading,w
  2340     0526  00F0               	movwf	?_ADC_read
  2341     0527                     l71:
  2342     0527  0008               	return
  2343     0528                     __end_of_ADC_read:
  2344                           
  2345                           	psect	text16
  2346     0479                     __ptext16:	
  2347 ;; *************** function _ADC_init *****************
  2348 ;; Defined at:
  2349 ;;		line 21 in file "display_adc_reading_lcd.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376     0479                     _ADC_init:	
  2377                           ;psect for function _ADC_init
  2378                           
  2379     0479                     l1244:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _ADC_init: [wreg]
  2382                           
  2383                           
  2384                           ;display_adc_reading_lcd.c: 22:     return reading;
  2385     0479  3081               	movlw	129
  2386     047A  1283               	bcf	3,5	;RP0=0, select bank0
  2387     047B  1303               	bcf	3,6	;RP1=0, select bank0
  2388     047C  009F               	movwf	31	;volatile
  2389                           
  2390                           ;display_adc_reading_lcd.c: 23: }
  2391     047D  3080               	movlw	128
  2392     047E  1683               	bsf	3,5	;RP0=1, select bank1
  2393     047F  1303               	bcf	3,6	;RP1=0, select bank1
  2394     0480  009F               	movwf	31	;volatile
  2395     0481                     l65:
  2396     0481  0008               	return
  2397     0482                     __end_of_ADC_init:
  2398     007E                     btemp	set	126	;btemp
  2399     007E                     wtemp0	set	126
  2400                           
  2401                           	psect	config
  2402                           
  2403                           ;Config register CONFIG @ 0x2007
  2404                           ;	Oscillator Selection bits
  2405                           ;	FOSC = HS, HS oscillator
  2406                           ;	Watchdog Timer Enable bit
  2407                           ;	WDTE = OFF, WDT disabled
  2408                           ;	Power-up Timer Enable bit
  2409                           ;	PWRTE = OFF, PWRT disabled
  2410                           ;	Brown-out Reset Enable bit
  2411                           ;	BOREN = ON, BOR enabled
  2412                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2413                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2414                           ;	Data EEPROM Memory Code Protection bit
  2415                           ;	CPD = 0x1, unprogrammed default
  2416                           ;	Flash Program Memory Write Enable bits
  2417                           ;	WRT = 0x3, unprogrammed default
  2418                           ;	In-Circuit Debugger Mode bit
  2419                           ;	DEBUG = 0x1, unprogrammed default
  2420                           ;	Flash Program Memory Code Protection bit
  2421                           ;	CP = 0x1, unprogrammed default
  2422     2007                     	org	8199
  2423     2007  3F7A               	dw	16250

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> main@buffer(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeWord@word	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[7]), main@buffer(BANK0[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _writeWord->_LCD_write
    _LCD_write->_delay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_line2->_delay
    _LCD_line1->_delay
    _LCD_enable->_delay
    _LCD_clear->_delay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2499
                                             15 BANK0     10    10      0
                           _ADC_init
                           _ADC_read
                          _LCD_clear
                           _LCD_init
                          _LCD_line1
                          _LCD_line2
                            _sprintf
                          _writeWord
 ---------------------------------------------------------------------------------
 (1) _writeWord                                            2     0      2     341
                                              3 COMMON     2     0      2
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_write                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    1774
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_line2                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_line1                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             5     3      2     121
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _LCD_clear
     _delay
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_line1
     _delay
   _LCD_line2
     _delay
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _writeWord
     _LCD_write
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 12:15:21 2023

                      pc 0002                       l33 048D                       l42 04AB  
                     l51 049B                       l36 05A5                       l45 04BB  
                     l62 0572                       l71 0527                       l39 04DC  
                     l56 0504                       l48 04CB                       l65 0481  
                     l68 0519                       fsr 0004      ___wmul@multiplicand 0072  
            ?_LCD_enable 0070                      l211 0534                      l213 054C  
                    l207 07FB                      l177 0692                      l483 0623  
                    l493 05DF                      l664 04EE                      _RA1 0029  
                    _RE0 0048                      _RE1 0049                      _RE2 004A  
                    u400 052E                      u401 052D                      u500 061F  
                    u501 061E                      u510 05AC                      u430 0548  
                    u511 05AB                      u431 0547                      u415 0535  
                    u440 05E8                      u600 0684                      u441 05E7  
                    u425 053C                      u601 0683                      u370 0504  
                    u530 05BE                      u610 06BA                      u371 0503  
                    u531 05BD                      u611 06B9                      u460 05FA  
                    u540 05C8                      u380 04E5                      u700 07A6  
                    u620 06FA                      u461 05F9                      u541 05C7  
                    u525 05B0                      u381 04E4                      u701 07A5  
                    u621 06F9                      u390 04EB                      u710 07E7  
                    u630 0745                      u375 0500                      u455 05EC  
                    u391 04EA                      u711 07E6                      u631 0744  
                    u480 060B                      u560 05DB                      u720 07F7  
                    u640 0750                      u481 060A                      u561 05DA  
                    u545 05C4                      u721 07F6                      u641 074F  
                    u650 075B                      u570 0572                      u475 05FB  
                    u555 05CF                      u651 075A                      u635 0741  
                    u571 0571                      u660 076F                      u485 0607  
                    u661 076E                      u590 051D                      u670 0775  
                    u591 051C                      u495 0613                      u671 0774  
                    u655 0757                      u680 078A                      u585 050E  
                    u681 0789                      u690 0791                      u691 0790  
                    fsr0 0004                      indf 0000            writeWord@word 0073  
                   l1100 04D4                     l1110 04EB                     l1102 04D9  
                   l1200 049C                     l1120 052E                     l1112 04ED  
                   l1104 04DE                     l1210 04A8                     l1202 04A0  
                   l1130 05E0                     l1122 053B                     l1106 04DF  
                   l1204 04A1                     l1220 04B3                     l1212 04AC  
                   l1140 05F6                     l1132 05E2                     l1124 0542  
                   l1116 0528                     l1108 04E5                     l1206 04A2  
                   l1222 04B8                     l1214 04B0                     l1230 04C2  
                   l1150 0619                     l1142 05FA                     l1134 05E8  
                   l1126 0548                     l1118 052A                     l1310 0767  
                   l1302 0746                     l1208 04A3                     l1080 0486  
                   l1216 04B1                     l1232 04C3                     l1224 04BC  
                   l1144 060B                     l1136 05EB                     l1152 061F  
                   l1160 05AF                     l1320 077E                     l1312 076B  
                   l1304 074A                     l1240 055C                     l1250 051D  
                   l1074 04F1                     l1090 0498                     l1082 0489  
                   l1218 04B2                     l1234 04C8                     l1226 04C0  
                   l1146 0611                     l1138 05F2                     l1170 05CE  
                   l1162 05B6                     l1330 07A6                     l1314 076F  
                   l1322 078B                     l1306 0750                     l1242 0562  
                   l1244 0479                     l1076 04F7                     l1068 04EF  
                   l1084 048C                     l1180 0578                     l1228 04C1  
                   l1148 0612                     l1172 05D5                     l1164 05BA  
                   l1156 05A6                     l1332 07A9                     l1324 0791  
                   l1316 0775                     l1308 075B                     l1260 0689  
                   l1340 07E7                     l1092 04CD                     l1236 054D  
                   l1246 0505                     l1086 048E                     l1078 0482  
                   l1190 058E                     l1182 057C                     l1166 05BE  
                   l1158 05AC                     l1174 05DB                     l1334 07D5  
                   l1326 0796                     l1318 077A                     l1342 07F7  
                   l1270 06AA                     l1414 06A5                     l1262 068E  
                   l1254 067B                     l1094 04D1                     l1238 054E  
                   l1248 0518                     l1088 0493                     l1192 0593  
                   l1184 0581                     l1168 05C8                     l1336 07DA  
                   l1328 079A                     l1416 0714                     l1280 06EA  
                   l1272 06BA                     l1264 0693                     l1256 067E  
                   l1096 04D2                     l1360 0633                     l1194 0597  
                   l1186 0585                     l1178 0573                     l1338 07DE  
                   l1290 0724                     l1282 06FB                     l1274 06BE  
                   l1258 0684                     l1098 04D3                     l1370 0662  
                   l1362 0638                     l1354 0624                     l1196 059C  
                   l1188 058A                     l1292 0728                     l1276 06D3  
                   l1268 0697                     l1372 066B                     l1364 0641  
                   l1356 0629                     l1198 05A0                     l1278 06E6  
                   l1286 0700                     l1366 064F                     l1358 062E  
                   l1288 071C                     l1368 0654                     l1298 072A  
                   STR_1 001D                     STR_2 0034                     STR_3 002D  
            main@reading 0037                     _main 0624                     _init 0482  
                   btemp 007E                     start 0000         __end_of_ADC_init 0482  
       __end_of_ADC_read 0528         __end_of_LCD_init 05A6                    ?_main 0070  
                  ?_init 0070          __end_of___lwdiv 0624          __end_of___lwmod 05E0  
                  _PORTD 0008                    _TRISD 0088                    _TRISE 0089  
                  _delay 04EF          __end_of_dpowers 001D          __end_of_isdigit 04EF  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07FC          __initialization 07FC             __end_of_main 0678  
           __end_of_init 048E                   ??_main 007C                   ??_init 0070  
      __end_of_LCD_clear 04AC        __end_of_LCD_line1 04BC        __end_of_LCD_line2 04CC  
                 ?_delay 0070        __end_of_LCD_write 04DD                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ___wmul 0528                ??___lwdiv 0074                ??___lwmod 007B  
                 delay@i 0070                ??_isdigit 0070                ?_ADC_init 0070  
              ?_ADC_read 0070                ??_sprintf 0023  __end_of__initialization 07FC  
              ?_LCD_init 0070           __pcstackCOMMON 0070            __end_of_delay 0505  
           ??_LCD_enable 0072          ADC_read@channel 0070               ??_ADC_init 0070  
             ??_ADC_read 0072                  ??_delay 0070          ADC_read@reading 0073  
           sprintf@width 002C               ??_LCD_init 0072       __end_of_LCD_enable 049C  
             __pmaintext 0624                  ?___wmul 0070               __stringtab 0003  
                ___lwdiv 05E0                  ___lwmod 05A6                  __ptext1 054D  
                __ptext2 04CC                  __ptext3 0678                  __ptext4 04DD  
                __ptext5 0528                  __ptext6 05A6                  __ptext7 05E0  
                __ptext8 04BC                  __ptext9 04AC                  _dpowers 0013  
                _isdigit 04DD                  _sprintf 0678                _LCD_clear 049C  
   end_of_initialization 07FC                _LCD_line1 04AC                _LCD_line2 04BC  
              _LCD_write 04CC        __end_of_writeWord 0573               ?_LCD_clear 0070  
             ?_LCD_line1 0070               ?_LCD_line2 0070               ?_LCD_write 0070  
             main@buffer 002F           __end_of___wmul 054D      start_initialization 07FC  
             LCD_write@x 0072                 ??___wmul 0074                ___latbits 0002  
          __pcstackBANK0 0020              ??_LCD_clear 0072              ??_LCD_line1 0072  
            ??_LCD_line2 0072              ??_LCD_write 0072              sprintf@flag 0027  
            sprintf@prec 002A         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0003                 ?_isdigit 0070  
               _ADC_init 0479                 _ADC_read 0505         ___lwdiv@quotient 0074  
               ?_sprintf 0020           ___wmul@product 0074                 _LCD_init 0573  
               _GO_nDONE 00FA              __stringbase 0012        ___wmul@multiplier 0070  
              _writeWord 054D       __end_of__stringtab 0013              _isdigit$558 0070  
             sprintf@val 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0573                 __ptext11 0482                 __ptext12 048E  
               __ptext13 049C                 __ptext14 04EF                 __ptext15 0505  
               __ptext16 0479               ?_writeWord 0073               _LCD_enable 048E  
               isdigit@c 0071                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 0079                stringcode 000D                 sprintf@c 002E  
               sprintf@f 0020          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 000D                 stringtab 0003              ??_writeWord 0075  
