

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 12:07:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0008                     _PORTD	set	8
   175     004A                     _RE2	set	74
   176     0049                     _RE1	set	73
   177     0048                     _RE0	set	72
   178     0029                     _RA1	set	41
   179     0088                     _TRISD	set	136
   180     0089                     _TRISE	set	137
   181     009F                     _ADCON1	set	159
   182                           
   183                           	psect	strings
   184     0003                     __pstrings:
   185     0003                     stringtab:
   186     0003                     __stringtab:
   187     0003                     stringcode:	
   188                           ;	String table - string pointers are 1 byte each
   189                           
   190     0003                     stringdir:
   191     0003  3000               	movlw	high stringdir
   192     0004  008A               	movwf	10
   193     0005  0804               	movf	4,w
   194     0006  0A84               	incf	4,f
   195     0007  0782               	addwf	2,f
   196     0008                     __stringbase:
   197     0008  3400               	retlw	0
   198     0009                     __end_of__stringtab:
   199     0009                     STR_1:
   200     0009  3459               	retlw	89	;'Y'
   201     000A  346F               	retlw	111	;'o'
   202     000B  3475               	retlw	117	;'u'
   203     000C  3472               	retlw	114	;'r'
   204     000D  3420               	retlw	32	;' '
   205     000E  344E               	retlw	78	;'N'
   206     000F  3461               	retlw	97	;'a'
   207     0010  346D               	retlw	109	;'m'
   208     0011  3465               	retlw	101	;'e'
   209     0012  3400               	retlw	0
   210                           
   211                           	psect	cinit
   212     07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07FC                     __initialization:
   216     07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219     07FC                     __end_of__initialization:
   220     07FC  0183               	clrf	3
   221     07FD  120A  118A  2EF2   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224     0070                     __pcstackCOMMON:
   225     0070                     ?_LCD_enable:
   226     0070                     ?_delay:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ??_delay:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_init:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ??_init:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ?_LCD_init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_LCD_write:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_LCD_line1:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_LCD_shift_right:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_stringLength:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     delay@i:	
   257                           ; 2 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261     0070                     	ds	2
   262     0072                     ??_LCD_enable:
   263     0072                     ??_LCD_init:	
   264                           ; 1 bytes @ 0x2
   265                           
   266     0072                     ??_LCD_write:	
   267                           ; 1 bytes @ 0x2
   268                           
   269     0072                     ??_LCD_line1:	
   270                           ; 1 bytes @ 0x2
   271                           
   272     0072                     ??_stringLength:	
   273                           ; 1 bytes @ 0x2
   274                           
   275     0072                     LCD_write@x:	
   276                           ; 1 bytes @ 0x2
   277                           
   278     0072                     stringLength@len:	
   279                           ; 1 bytes @ 0x2
   280                           
   281                           
   282                           ; 2 bytes @ 0x2
   283     0072                     	ds	2
   284     0074                     stringLength@str:
   285                           
   286                           ; 1 bytes @ 0x4
   287     0074                     	ds	1
   288     0075                     ??_LCD_shift_right:
   289                           
   290                           ; 1 bytes @ 0x5
   291     0075                     	ds	3
   292     0078                     ??_main:
   293                           
   294                           	psect	cstackBANK0
   295     0020                     __pcstackBANK0:	
   296                           ; 1 bytes @ 0x8
   297                           
   298     0020                     _LCD_shift_right$68:
   299                           
   300                           ; 2 bytes @ 0x0
   301     0020                     	ds	2
   302     0022                     LCD_shift_right@len:
   303                           
   304                           ; 2 bytes @ 0x2
   305     0022                     	ds	2
   306     0024                     LCD_shift_right@word:
   307                           
   308                           ; 1 bytes @ 0x4
   309     0024                     	ds	1
   310     0025                     LCD_shift_right@i:
   311                           
   312                           ; 2 bytes @ 0x5
   313     0025                     	ds	2
   314     0027                     LCD_shift_right@j:
   315                           
   316                           ; 2 bytes @ 0x7
   317     0027                     	ds	2
   318                           
   319                           	psect	maintext
   320     06F2                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 59 in file "simulates_a_marquee_lcd.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : B00/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 3
   346 ;; This function calls:
   347 ;;		_LCD_init
   348 ;;		_LCD_line1
   349 ;;		_LCD_shift_right
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355     06F2                     _main:	
   356                           ;psect for function _main
   357                           
   358     06F2                     l952:	
   359                           ;incstack = 0
   360                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   361                           
   362     06F2  120A  118A  273B  120A  118A  	fcall	_LCD_init
   363     06F7  120A  118A  26D1  120A  118A  	fcall	_LCD_line1
   364     06FC                     l954:
   365     06FC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   366     06FD  120A  118A  276E  120A  118A  	fcall	_LCD_shift_right
   367     0702                     l77:
   368     0702                     l78:
   369     0702  2F02               	goto	l77
   370     0703  120A  118A  2800   	ljmp	start
   371     0706                     __end_of_main:
   372                           
   373                           	psect	text1
   374     076E                     __ptext1:	
   375 ;; *************** function _LCD_shift_right *****************
   376 ;; Defined at:
   377 ;;		line 45 in file "simulates_a_marquee_lcd.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  word            1    wreg     PTR unsigned char 
   380 ;;		 -> STR_1(10), 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  word            1    4[BANK0 ] PTR unsigned char 
   383 ;;		 -> STR_1(10), 
   384 ;;  j               2    7[BANK0 ] int 
   385 ;;  i               2    5[BANK0 ] int 
   386 ;;  len             2    2[BANK0 ] int 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       9       0       0       0
   398 ;;      Temps:          3       0       0       0       0
   399 ;;      Totals:         3       9       0       0       0
   400 ;;Total ram usage:       12 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; Hardware stack levels required when called: 2
   403 ;; This function calls:
   404 ;;		_LCD_line1
   405 ;;		_LCD_write
   406 ;;		_stringLength
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412     076E                     _LCD_shift_right:	
   413                           ;psect for function _LCD_shift_right
   414                           
   415                           
   416                           ;incstack = 0
   417                           ; Regs used in _LCD_shift_right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   418                           ;LCD_shift_right@word stored from wreg
   419     076E  1283               	bcf	3,5	;RP0=0, select bank0
   420     076F  1303               	bcf	3,6	;RP1=0, select bank0
   421     0770  00A4               	movwf	LCD_shift_right@word
   422     0771                     l892:
   423                           
   424                           ;simulates_a_marquee_lcd.c: 46: 
   425     0771  0824               	movf	LCD_shift_right@word,w
   426     0772  120A  118A  271C  120A  118A  	fcall	_stringLength
   427     0777  0871               	movf	?_stringLength+1,w
   428     0778  1283               	bcf	3,5	;RP0=0, select bank0
   429     0779  1303               	bcf	3,6	;RP1=0, select bank0
   430     077A  00A3               	movwf	LCD_shift_right@len+1
   431     077B  0870               	movf	?_stringLength,w
   432     077C  00A2               	movwf	LCD_shift_right@len
   433     077D                     l894:
   434                           
   435                           ;simulates_a_marquee_lcd.c: 47:      }
   436     077D  01A5               	clrf	LCD_shift_right@i
   437     077E  01A6               	clrf	LCD_shift_right@i+1
   438     077F  2FE5               	goto	l918
   439     0780                     l896:
   440     0780  120A  118A  26D1  120A  118A  	fcall	_LCD_line1
   441     0785                     l898:
   442     0785  1283               	bcf	3,5	;RP0=0, select bank0
   443     0786  1303               	bcf	3,6	;RP1=0, select bank0
   444     0787  01A7               	clrf	LCD_shift_right@j
   445     0788  01A8               	clrf	LCD_shift_right@j+1
   446     0789                     l904:
   447     0789  1283               	bcf	3,5	;RP0=0, select bank0
   448     078A  1303               	bcf	3,6	;RP1=0, select bank0
   449     078B  0827               	movf	LCD_shift_right@j,w
   450     078C  0725               	addwf	LCD_shift_right@i,w
   451     078D  00F5               	movwf	??_LCD_shift_right
   452     078E  0828               	movf	LCD_shift_right@j+1,w
   453     078F  1803               	skipnc
   454     0790  0A28               	incf	LCD_shift_right@j+1,w
   455     0791  0726               	addwf	LCD_shift_right@i+1,w
   456     0792  00F6               	movwf	??_LCD_shift_right+1
   457     0793  0876               	movf	??_LCD_shift_right+1,w
   458     0794  3A80               	xorlw	128
   459     0795  00F7               	movwf	??_LCD_shift_right+2
   460     0796  0823               	movf	LCD_shift_right@len+1,w
   461     0797  3A80               	xorlw	128
   462     0798  0277               	subwf	??_LCD_shift_right+2,w
   463     0799  1D03               	skipz
   464     079A  2F9D               	goto	u95
   465     079B  0822               	movf	LCD_shift_right@len,w
   466     079C  0275               	subwf	??_LCD_shift_right,w
   467     079D                     u95:
   468     079D  1C03               	skipc
   469     079E  2FA0               	goto	u91
   470     079F  2FA1               	goto	u90
   471     07A0                     u91:
   472     07A0  2FA8               	goto	l908
   473     07A1                     u90:
   474     07A1                     l906:
   475     07A1  3020               	movlw	32
   476     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   477     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   478     07A4  00A0               	movwf	_LCD_shift_right$68
   479     07A5  3000               	movlw	0
   480     07A6  00A1               	movwf	_LCD_shift_right$68+1
   481     07A7  2FBB               	goto	l910
   482     07A8                     l908:
   483     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   484     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   485     07AA  0825               	movf	LCD_shift_right@i,w
   486     07AB  0724               	addwf	LCD_shift_right@word,w
   487     07AC  00F5               	movwf	??_LCD_shift_right
   488     07AD  0827               	movf	LCD_shift_right@j,w
   489     07AE  0775               	addwf	??_LCD_shift_right,w
   490     07AF  0084               	movwf	4
   491     07B0  120A  118A  2003  120A  118A  	fcall	stringdir
   492     07B5  00F6               	movwf	??_LCD_shift_right+1
   493     07B6  01F7               	clrf	??_LCD_shift_right+2
   494     07B7  0876               	movf	??_LCD_shift_right+1,w
   495     07B8  00A0               	movwf	_LCD_shift_right$68
   496     07B9  0877               	movf	??_LCD_shift_right+2,w
   497     07BA  00A1               	movwf	_LCD_shift_right$68+1
   498     07BB                     l910:
   499     07BB  0820               	movf	_LCD_shift_right$68,w
   500     07BC  120A  118A  26E1  120A  118A  	fcall	_LCD_write
   501     07C1                     l912:
   502     07C1  3001               	movlw	1
   503     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   504     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   505     07C4  07A7               	addwf	LCD_shift_right@j,f
   506     07C5  1803               	skipnc
   507     07C6  0AA8               	incf	LCD_shift_right@j+1,f
   508     07C7  3000               	movlw	0
   509     07C8  07A8               	addwf	LCD_shift_right@j+1,f
   510     07C9                     l914:
   511     07C9  0828               	movf	LCD_shift_right@j+1,w
   512     07CA  3A80               	xorlw	128
   513     07CB  00FF               	movwf	btemp+1
   514     07CC  3080               	movlw	128
   515     07CD  027F               	subwf	btemp+1,w
   516     07CE  1D03               	skipz
   517     07CF  2FD2               	goto	u105
   518     07D0  3010               	movlw	16
   519     07D1  0227               	subwf	LCD_shift_right@j,w
   520     07D2                     u105:
   521     07D2  1C03               	skipc
   522     07D3  2FD5               	goto	u101
   523     07D4  2FD6               	goto	u100
   524     07D5                     u101:
   525     07D5  2F89               	goto	l904
   526     07D6                     u100:
   527     07D6                     l916:
   528     07D6  30C7               	movlw	199
   529     07D7  00F5               	movwf	??_LCD_shift_right
   530     07D8                     u137:
   531     07D8  2FD9               	nop2
   532     07D9  0BF5               	decfsz	??_LCD_shift_right,f
   533     07DA  2FD8               	goto	u137
   534     07DB  2FDC               	nop2
   535     07DC  2FDD               	nop2
   536     07DD  3001               	movlw	1
   537     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   538     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   539     07E0  07A5               	addwf	LCD_shift_right@i,f
   540     07E1  1803               	skipnc
   541     07E2  0AA6               	incf	LCD_shift_right@i+1,f
   542     07E3  3000               	movlw	0
   543     07E4  07A6               	addwf	LCD_shift_right@i+1,f
   544     07E5                     l918:
   545     07E5  0822               	movf	LCD_shift_right@len,w
   546     07E6  3E10               	addlw	16
   547     07E7  00F5               	movwf	??_LCD_shift_right
   548     07E8  0823               	movf	LCD_shift_right@len+1,w
   549     07E9  1803               	skipnc
   550     07EA  3E01               	addlw	1
   551     07EB  3E00               	addlw	0
   552     07EC  00F6               	movwf	??_LCD_shift_right+1
   553     07ED  0826               	movf	LCD_shift_right@i+1,w
   554     07EE  3A80               	xorlw	128
   555     07EF  00F7               	movwf	??_LCD_shift_right+2
   556     07F0  0876               	movf	??_LCD_shift_right+1,w
   557     07F1  3A80               	xorlw	128
   558     07F2  0277               	subwf	??_LCD_shift_right+2,w
   559     07F3  1D03               	skipz
   560     07F4  2FF7               	goto	u115
   561     07F5  0875               	movf	??_LCD_shift_right,w
   562     07F6  0225               	subwf	LCD_shift_right@i,w
   563     07F7                     u115:
   564     07F7  1C03               	skipc
   565     07F8  2FFA               	goto	u111
   566     07F9  2FFB               	goto	u110
   567     07FA                     u111:
   568     07FA  2F80               	goto	l896
   569     07FB                     u110:
   570     07FB                     l72:
   571     07FB  0008               	return
   572     07FC                     __end_of_LCD_shift_right:
   573                           
   574                           	psect	text2
   575     071C                     __ptext2:	
   576 ;; *************** function _stringLength *****************
   577 ;; Defined at:
   578 ;;		line 36 in file "simulates_a_marquee_lcd.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  str             1    wreg     PTR unsigned char 
   581 ;;		 -> STR_1(10), 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  str             1    4[COMMON] PTR unsigned char 
   584 ;;		 -> STR_1(10), 
   585 ;;  len             2    2[COMMON] int 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  2    0[COMMON] int 
   588 ;; Registers used:
   589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         2       0       0       0       0
   596 ;;      Locals:         3       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         5       0       0       0       0
   599 ;;Total ram usage:        5 bytes
   600 ;; Hardware stack levels used: 2
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_LCD_shift_right
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     071C                     _stringLength:	
   609                           ;psect for function _stringLength
   610                           
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _stringLength: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   614                           ;stringLength@str stored from wreg
   615     071C  00F4               	movwf	stringLength@str
   616     071D                     l858:
   617                           
   618                           ;simulates_a_marquee_lcd.c: 37: 
   619     071D  01F2               	clrf	stringLength@len
   620     071E  01F3               	clrf	stringLength@len+1
   621                           
   622                           ;simulates_a_marquee_lcd.c: 38: void main() {
   623     071F  2F2A               	goto	l864
   624     0720                     l860:
   625                           
   626                           ;simulates_a_marquee_lcd.c: 39: 
   627     0720  3001               	movlw	1
   628     0721  07F2               	addwf	stringLength@len,f
   629     0722  1803               	skipnc
   630     0723  0AF3               	incf	stringLength@len+1,f
   631     0724  3000               	movlw	0
   632     0725  07F3               	addwf	stringLength@len+1,f
   633     0726                     l862:
   634                           
   635                           ;simulates_a_marquee_lcd.c: 40:      LCD_init();
   636     0726  3001               	movlw	1
   637     0727  00FF               	movwf	btemp+1
   638     0728  087F               	movf	btemp+1,w
   639     0729  07F4               	addwf	stringLength@str,f
   640     072A                     l864:
   641                           
   642                           ;simulates_a_marquee_lcd.c: 38: void main() {
   643     072A  0874               	movf	stringLength@str,w
   644     072B  0084               	movwf	4
   645     072C  120A  118A  2003  120A  118A  	fcall	stringdir
   646     0731  3A00               	xorlw	0
   647     0732  1D03               	skipz
   648     0733  2F35               	goto	u81
   649     0734  2F36               	goto	u80
   650     0735                     u81:
   651     0735  2F20               	goto	l860
   652     0736                     u80:
   653     0736                     l866:
   654                           
   655                           ;simulates_a_marquee_lcd.c: 42:      LCD_line1();
   656     0736  0873               	movf	stringLength@len+1,w
   657     0737  00F1               	movwf	?_stringLength+1
   658     0738  0872               	movf	stringLength@len,w
   659     0739  00F0               	movwf	?_stringLength
   660     073A                     l60:
   661     073A  0008               	return
   662     073B                     __end_of_stringLength:
   663                           
   664                           	psect	text3
   665     06E1                     __ptext3:	
   666 ;; *************** function _LCD_write *****************
   667 ;; Defined at:
   668 ;;		line 43 in file "./lcd.h"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  x               1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  x               1    2[COMMON] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 1
   689 ;; This function calls:
   690 ;;		_delay
   691 ;; This function is called by:
   692 ;;		_LCD_shift_right
   693 ;;		_writeWord
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697     06E1                     _LCD_write:	
   698                           ;psect for function _LCD_write
   699                           
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _LCD_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   703                           ;LCD_write@x stored from wreg
   704     06E1  00F2               	movwf	LCD_write@x
   705     06E2                     l834:
   706                           
   707                           ;./lcd.h: 43: void LCD_write(char x);./lcd.h: 44: {;./lcd.h: 45:  PORTD = x;
   708     06E2  0872               	movf	LCD_write@x,w
   709     06E3  1283               	bcf	3,5	;RP0=0, select bank0
   710     06E4  1303               	bcf	3,6	;RP1=0, select bank0
   711     06E5  0088               	movwf	8	;volatile
   712     06E6                     l836:
   713                           
   714                           ;./lcd.h: 46:  RE0 = 1;
   715     06E6  1409               	bsf	9,0	;volatile
   716     06E7                     l838:
   717                           
   718                           ;./lcd.h: 47:  RE1 = 0;
   719     06E7  1089               	bcf	9,1	;volatile
   720     06E8                     l840:
   721                           
   722                           ;./lcd.h: 48:  RE2 = 0;
   723     06E8  1109               	bcf	9,2	;volatile
   724     06E9                     l842:
   725                           
   726                           ;./lcd.h: 49:  delay();
   727     06E9  120A  118A  2706  120A  118A  	fcall	_delay
   728     06EE                     l844:
   729                           
   730                           ;./lcd.h: 50:  RE2 = 1;
   731     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   732     06EF  1303               	bcf	3,6	;RP1=0, select bank0
   733     06F0  1509               	bsf	9,2	;volatile
   734     06F1                     l31:
   735     06F1  0008               	return
   736     06F2                     __end_of_LCD_write:
   737                           
   738                           	psect	text4
   739     06D1                     __ptext4:	
   740 ;; *************** function _LCD_line1 *****************
   741 ;; Defined at:
   742 ;;		line 62 in file "./lcd.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 1
   763 ;; This function calls:
   764 ;;		_delay
   765 ;; This function is called by:
   766 ;;		_LCD_shift_right
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     06D1                     _LCD_line1:	
   772                           ;psect for function _LCD_line1
   773                           
   774     06D1                     l846:	
   775                           ;incstack = 0
   776                           ; Regs used in _LCD_line1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   777                           
   778                           
   779                           ;./lcd.h: 63:     PORTD = 0x02;
   780     06D1  3002               	movlw	2
   781     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   782     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   783     06D4  0088               	movwf	8	;volatile
   784     06D5                     l848:
   785                           
   786                           ;./lcd.h: 64:     RE0 = 0;
   787     06D5  1009               	bcf	9,0	;volatile
   788     06D6                     l850:
   789                           
   790                           ;./lcd.h: 65:     RE1 = 0;
   791     06D6  1089               	bcf	9,1	;volatile
   792     06D7                     l852:
   793                           
   794                           ;./lcd.h: 66:     RE2=0;
   795     06D7  1109               	bcf	9,2	;volatile
   796     06D8                     l854:
   797                           
   798                           ;./lcd.h: 67:     delay();
   799     06D8  120A  118A  2706  120A  118A  	fcall	_delay
   800     06DD                     l856:
   801                           
   802                           ;./lcd.h: 68:  RE2 = 1;
   803     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   804     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   805     06DF  1509               	bsf	9,2	;volatile
   806     06E0                     l37:
   807     06E0  0008               	return
   808     06E1                     __end_of_LCD_line1:
   809                           
   810                           	psect	text5
   811     073B                     __ptext5:	
   812 ;; *************** function _LCD_init *****************
   813 ;; Defined at:
   814 ;;		line 28 in file "./lcd.h"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 2
   835 ;; This function calls:
   836 ;;		_LCD_enable
   837 ;;		_init
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     073B                     _LCD_init:	
   844                           ;psect for function _LCD_init
   845                           
   846     073B                     l870:	
   847                           ;incstack = 0
   848                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850                           
   851                           ;./lcd.h: 30:     init();
   852     073B  120A  118A  26B7  120A  118A  	fcall	_init
   853     0740                     l872:
   854                           
   855                           ;./lcd.h: 31:  PORTD = 0X1;
   856     0740  3001               	movlw	1
   857     0741  1283               	bcf	3,5	;RP0=0, select bank0
   858     0742  1303               	bcf	3,6	;RP1=0, select bank0
   859     0743  0088               	movwf	8	;volatile
   860     0744                     l874:
   861                           
   862                           ;./lcd.h: 32:  LCD_enable();
   863     0744  120A  118A  26C3  120A  118A  	fcall	_LCD_enable
   864     0749                     l876:
   865                           
   866                           ;./lcd.h: 33:  PORTD = 0X38;
   867     0749  3038               	movlw	56
   868     074A  1283               	bcf	3,5	;RP0=0, select bank0
   869     074B  1303               	bcf	3,6	;RP1=0, select bank0
   870     074C  0088               	movwf	8	;volatile
   871     074D                     l878:
   872                           
   873                           ;./lcd.h: 34:  LCD_enable();
   874     074D  120A  118A  26C3  120A  118A  	fcall	_LCD_enable
   875     0752                     l880:
   876                           
   877                           ;./lcd.h: 35:  PORTD = 0X0e;
   878     0752  300E               	movlw	14
   879     0753  1283               	bcf	3,5	;RP0=0, select bank0
   880     0754  1303               	bcf	3,6	;RP1=0, select bank0
   881     0755  0088               	movwf	8	;volatile
   882     0756                     l882:
   883                           
   884                           ;./lcd.h: 36:  LCD_enable();
   885     0756  120A  118A  26C3  120A  118A  	fcall	_LCD_enable
   886     075B                     l884:
   887                           
   888                           ;./lcd.h: 37:  PORTD = 0X06;
   889     075B  3006               	movlw	6
   890     075C  1283               	bcf	3,5	;RP0=0, select bank0
   891     075D  1303               	bcf	3,6	;RP1=0, select bank0
   892     075E  0088               	movwf	8	;volatile
   893     075F                     l886:
   894                           
   895                           ;./lcd.h: 38:  LCD_enable();
   896     075F  120A  118A  26C3  120A  118A  	fcall	_LCD_enable
   897     0764                     l888:
   898                           
   899                           ;./lcd.h: 39:  PORTD = 0X80;
   900     0764  3080               	movlw	128
   901     0765  1283               	bcf	3,5	;RP0=0, select bank0
   902     0766  1303               	bcf	3,6	;RP1=0, select bank0
   903     0767  0088               	movwf	8	;volatile
   904     0768                     l890:
   905                           
   906                           ;./lcd.h: 40:  LCD_enable();
   907     0768  120A  118A  26C3  120A  118A  	fcall	_LCD_enable
   908     076D                     l28:
   909     076D  0008               	return
   910     076E                     __end_of_LCD_init:
   911                           
   912                           	psect	text6
   913     06B7                     __ptext6:	
   914 ;; *************** function _init *****************
   915 ;; Defined at:
   916 ;;		line 20 in file "./lcd.h"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_LCD_init
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943     06B7                     _init:	
   944                           ;psect for function _init
   945                           
   946     06B7                     l682:	
   947                           ;incstack = 0
   948                           ; Regs used in _init: [wreg+status,2]
   949                           
   950                           
   951                           ;./lcd.h: 22:  ADCON1 = 0X07;
   952     06B7  3007               	movlw	7
   953     06B8  1683               	bsf	3,5	;RP0=1, select bank1
   954     06B9  1303               	bcf	3,6	;RP1=0, select bank1
   955     06BA  009F               	movwf	31	;volatile
   956     06BB                     l684:
   957                           
   958                           ;./lcd.h: 23:     RA1=1;
   959     06BB  1283               	bcf	3,5	;RP0=0, select bank0
   960     06BC  1303               	bcf	3,6	;RP1=0, select bank0
   961     06BD  1485               	bsf	5,1	;volatile
   962     06BE                     l686:
   963                           
   964                           ;./lcd.h: 24:  TRISE = 0X00;
   965     06BE  1683               	bsf	3,5	;RP0=1, select bank1
   966     06BF  1303               	bcf	3,6	;RP1=0, select bank1
   967     06C0  0189               	clrf	9	;volatile
   968     06C1                     l688:
   969                           
   970                           ;./lcd.h: 25:  TRISD = 0X00;
   971     06C1  0188               	clrf	8	;volatile
   972     06C2                     l25:
   973     06C2  0008               	return
   974     06C3                     __end_of_init:
   975                           
   976                           	psect	text7
   977     06C3                     __ptext7:	
   978 ;; *************** function _LCD_enable *****************
   979 ;; Defined at:
   980 ;;		line 82 in file "./lcd.h"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 1
  1001 ;; This function calls:
  1002 ;;		_delay
  1003 ;; This function is called by:
  1004 ;;		_LCD_init
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008     06C3                     _LCD_enable:	
  1009                           ;psect for function _LCD_enable
  1010                           
  1011     06C3                     l828:	
  1012                           ;incstack = 0
  1013                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1014                           
  1015                           
  1016                           ;./lcd.h: 84:  RE0 = 0;
  1017     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1018     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1019     06C5  1009               	bcf	9,0	;volatile
  1020                           
  1021                           ;./lcd.h: 85:  RE1 = 0;
  1022     06C6  1089               	bcf	9,1	;volatile
  1023                           
  1024                           ;./lcd.h: 86:  RE2 = 0;
  1025     06C7  1109               	bcf	9,2	;volatile
  1026     06C8                     l830:
  1027                           
  1028                           ;./lcd.h: 87:  delay();
  1029     06C8  120A  118A  2706  120A  118A  	fcall	_delay
  1030     06CD                     l832:
  1031                           
  1032                           ;./lcd.h: 88:  RE2 = 1;
  1033     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1034     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1035     06CF  1509               	bsf	9,2	;volatile
  1036     06D0                     l43:
  1037     06D0  0008               	return
  1038     06D1                     __end_of_LCD_enable:
  1039                           
  1040                           	psect	text8
  1041     0706                     __ptext8:	
  1042 ;; *************** function _delay *****************
  1043 ;; Defined at:
  1044 ;;		line 91 in file "./lcd.h"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  i               2    0[COMMON] int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, btemp+1
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         2       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         2       0       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_LCD_write
  1068 ;;		_LCD_line1
  1069 ;;		_LCD_enable
  1070 ;;		_LCD_clear
  1071 ;;		_LCD_line2
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075     0706                     _delay:	
  1076                           ;psect for function _delay
  1077                           
  1078     0706                     l818:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1081                           
  1082                           
  1083                           ;./lcd.h: 93:  int i;;./lcd.h: 94:  for (i = 0;i < 5000;i++);
  1084     0706  01F0               	clrf	delay@i
  1085     0707  01F1               	clrf	delay@i+1
  1086     0708                     l824:
  1087     0708  3001               	movlw	1
  1088     0709  07F0               	addwf	delay@i,f
  1089     070A  1803               	skipnc
  1090     070B  0AF1               	incf	delay@i+1,f
  1091     070C  3000               	movlw	0
  1092     070D  07F1               	addwf	delay@i+1,f
  1093     070E                     l826:
  1094     070E  0871               	movf	delay@i+1,w
  1095     070F  3A80               	xorlw	128
  1096     0710  00FF               	movwf	btemp+1
  1097     0711  3093               	movlw	147
  1098     0712  027F               	subwf	btemp+1,w
  1099     0713  1D03               	skipz
  1100     0714  2F17               	goto	u75
  1101     0715  3088               	movlw	136
  1102     0716  0270               	subwf	delay@i,w
  1103     0717                     u75:
  1104     0717  1C03               	skipc
  1105     0718  2F1A               	goto	u71
  1106     0719  2F1B               	goto	u70
  1107     071A                     u71:
  1108     071A  2F08               	goto	l824
  1109     071B                     u70:
  1110     071B                     l48:
  1111     071B  0008               	return
  1112     071C                     __end_of_delay:
  1113     007E                     btemp	set	126	;btemp
  1114     007E                     wtemp0	set	126
  1115                           
  1116                           	psect	config
  1117                           
  1118                           ;Config register CONFIG @ 0x2007
  1119                           ;	Oscillator Selection bits
  1120                           ;	FOSC = HS, HS oscillator
  1121                           ;	Watchdog Timer Enable bit
  1122                           ;	WDTE = OFF, WDT disabled
  1123                           ;	Power-up Timer Enable bit
  1124                           ;	PWRTE = OFF, PWRT disabled
  1125                           ;	Brown-out Reset Enable bit
  1126                           ;	BOREN = ON, BOR enabled
  1127                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1128                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1129                           ;	Data EEPROM Memory Code Protection bit
  1130                           ;	CPD = 0x1, unprogrammed default
  1131                           ;	Flash Program Memory Write Enable bits
  1132                           ;	WRT = 0x3, unprogrammed default
  1133                           ;	In-Circuit Debugger Mode bit
  1134                           ;	DEBUG = 0x1, unprogrammed default
  1135                           ;	Flash Program Memory Code Protection bit
  1136                           ;	CP = 0x1, unprogrammed default
  1137     2007                     	org	8199
  1138     2007  3F7A               	dw	16250

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      9       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_shift_right@word	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    stringLength@str	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_shift_right
    _LCD_shift_right->_stringLength
    _LCD_write->_delay
    _LCD_line1->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    _main->_LCD_shift_right

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     590
                           _LCD_init
                          _LCD_line1
                    _LCD_shift_right
 ---------------------------------------------------------------------------------
 (1) _LCD_shift_right                                     12    12      0     498
                                              5 COMMON     3     3      0
                                              0 BANK0      9     9      0
                          _LCD_line1
                          _LCD_write
                       _stringLength
 ---------------------------------------------------------------------------------
 (3) _stringLength                                         5     3      2      80
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_write                                            1     1      0      68
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_line1                                            0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      46
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_line1
     _delay
   _LCD_shift_right
     _LCD_line1
     _LCD_write
       _delay
     _stringLength

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 12:07:45 2023

                      pc 0002                       l31 06F1                       l25 06C2  
                     l43 06D0                       l28 076D                       l60 073A  
                     l37 06E0                       l48 071B                       l72 07FB  
                     l77 0702                       l78 0702                       u70 071B  
                     u71 071A                       u80 0736                       u81 0735  
                     u90 07A1                       u75 0717                       u91 07A0  
                     u95 079D                       fsr 0004              ?_LCD_enable 0070  
                    l830 06C8                      l910 07BB                      l824 0708  
                    l832 06CD                      l840 06E8                      l912 07C1  
                    l904 0789                      l826 070E                      l818 0706  
                    l682 06B7                      l850 06D6                      l842 06E9  
                    l834 06E2                      l914 07C9                      l906 07A1  
                    l828 06C3                      l684 06BB                      l852 06D7  
                    l844 06EE                      l836 06E6                      l860 0720  
                    l916 07D6                      l908 07A8                      l686 06BE  
                    l870 073B                      l854 06D8                      l846 06D1  
                    l838 06E7                      l862 0726                      l918 07E5  
                    l688 06C1                      l880 0752                      l872 0740  
                    l856 06DD                      l848 06D5                      l864 072A  
                    l952 06F2                      l890 0768                      l882 0756  
                    l874 0744                      l866 0736                      l858 071D  
                    l954 06FC                      l884 075B                      l876 0749  
                    l892 0771                      l886 075F                      l878 074D  
                    l894 077D                      l888 0764                      l896 0780  
                    l898 0785                      _RA1 0029                      _RE0 0048  
                    _RE1 0049                      u100 07D6                      _RE2 004A  
                    u101 07D5                      u110 07FB                      u111 07FA  
                    u105 07D2                      u115 07F7                      u137 07D8  
                    fsr0 0004                     STR_1 0009                     _main 06F2  
                   _init 06B7                     btemp 007E                     start 0000  
       __end_of_LCD_init 076E                    ?_main 0070                    ?_init 0070  
                  _PORTD 0008                    _TRISD 0088                    _TRISE 0089  
                  _delay 0706                    pclath 000A                    status 0003  
                  wtemp0 007E       LCD_shift_right@len 0022          __initialization 07FC  
           _stringLength 071C             __end_of_main 0706             __end_of_init 06C3  
                 ??_main 0078                   ??_init 0070        __end_of_LCD_line1 06E1  
                 ?_delay 0070        __end_of_LCD_write 06F2                   _ADCON1 009F  
                 delay@i 0070       _LCD_shift_right$68 0020          stringLength@len 0072  
        stringLength@str 0074  __end_of__initialization 07FC      LCD_shift_right@word 0024  
              ?_LCD_init 0070           __pcstackCOMMON 0070            __end_of_delay 071C  
           ??_LCD_enable 0072                  ??_delay 0070               ??_LCD_init 0072  
     __end_of_LCD_enable 06D1               __pmaintext 06F2               __stringtab 0003  
      ??_LCD_shift_right 0075                  __ptext1 076E                  __ptext2 071C  
                __ptext3 06E1                  __ptext4 06D1                  __ptext5 073B  
                __ptext6 06B7                  __ptext7 06C3                  __ptext8 0706  
   end_of_initialization 07FC                _LCD_line1 06D1                _LCD_write 06E1  
             ?_LCD_line1 0070               ?_LCD_write 0070      start_initialization 07FC  
             LCD_write@x 0072                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCD_line1 0072              ??_LCD_write 0072          _LCD_shift_right 076E  
          ?_stringLength 0070                __pstrings 0003                 _LCD_init 073B  
         ??_stringLength 0072              __stringbase 0008  __end_of_LCD_shift_right 07FC  
       LCD_shift_right@i 0025         LCD_shift_right@j 0027       __end_of__stringtab 0009  
             _LCD_enable 06C3     __end_of_stringLength 073B         ?_LCD_shift_right 0070  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
