

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 12:02:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0008                     _PORTD	set	8
   174     004A                     _RE2	set	74
   175     0049                     _RE1	set	73
   176     0048                     _RE0	set	72
   177     0029                     _RA1	set	41
   178     0088                     _TRISD	set	136
   179     0089                     _TRISE	set	137
   180     009F                     _ADCON1	set	159
   181                           
   182                           	psect	strings
   183     0003                     __pstrings:
   184     0003                     stringtab:
   185     0003                     __stringtab:
   186     0003                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0003                     stringdir:
   190     0003  3000               	movlw	high stringdir
   191     0004  008A               	movwf	10
   192     0005  0804               	movf	4,w
   193     0006  0A84               	incf	4,f
   194     0007  0782               	addwf	2,f
   195     0008                     __stringbase:
   196     0008  3400               	retlw	0
   197     0009                     __end_of__stringtab:
   198     0009                     STR_1:
   199     0009  3459               	retlw	89	;'Y'
   200     000A  346F               	retlw	111	;'o'
   201     000B  3475               	retlw	117	;'u'
   202     000C  3472               	retlw	114	;'r'
   203     000D  3420               	retlw	32	;' '
   204     000E  344E               	retlw	78	;'N'
   205     000F  3461               	retlw	97	;'a'
   206     0010  346D               	retlw	109	;'m'
   207     0011  3465               	retlw	101	;'e'
   208     0012  3420               	retlw	32	;' '
   209     0013  3447               	retlw	71	;'G'
   210     0014  346F               	retlw	111	;'o'
   211     0015  3465               	retlw	101	;'e'
   212     0016  3473               	retlw	115	;'s'
   213     0017  3420               	retlw	32	;' '
   214     0018  3448               	retlw	72	;'H'
   215     0019  3465               	retlw	101	;'e'
   216     001A  3472               	retlw	114	;'r'
   217     001B  3465               	retlw	101	;'e'
   218     001C  3421               	retlw	33	;'!'
   219     001D  3400               	retlw	0
   220     001E                     STR_2:
   221     001E  3449               	retlw	73	;'I'
   222     001F  3444               	retlw	68	;'D'
   223     0020  343A               	retlw	58	;':'
   224     0021  3420               	retlw	32	;' '
   225     0022  3431               	retlw	49	;'1'
   226     0023  3432               	retlw	50	;'2'
   227     0024  3433               	retlw	51	;'3'
   228     0025  3434               	retlw	52	;'4'
   229     0026  3435               	retlw	53	;'5'
   230     0027  3436               	retlw	54	;'6'
   231     0028  3437               	retlw	55	;'7'
   232     0029  3400               	retlw	0
   233                           
   234                           	psect	cinit
   235     07FC                     start_initialization:	
   236                           ; #config settings
   237                           
   238     07FC                     __initialization:
   239     07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     07FC                     __end_of__initialization:
   243     07FC  0183               	clrf	3
   244     07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	cstackCOMMON
   247     0070                     __pcstackCOMMON:
   248     0070                     ?_LCD_enable:
   249     0070                     ?_delay:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ??_delay:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?_init:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ??_init:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ?_LCD_init:	
   262                           ; 1 bytes @ 0x0
   263                           
   264     0070                     ?_LCD_write:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     ?_LCD_line1:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ?_LCD_line2:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ?_writeWord:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     delay@i:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 2 bytes @ 0x0
   284     0070                     	ds	2
   285     0072                     ??_LCD_enable:
   286     0072                     ??_LCD_init:	
   287                           ; 1 bytes @ 0x2
   288                           
   289     0072                     ??_LCD_write:	
   290                           ; 1 bytes @ 0x2
   291                           
   292     0072                     ??_LCD_line1:	
   293                           ; 1 bytes @ 0x2
   294                           
   295     0072                     ??_LCD_line2:	
   296                           ; 1 bytes @ 0x2
   297                           
   298     0072                     LCD_write@x:	
   299                           ; 1 bytes @ 0x2
   300                           
   301                           
   302                           ; 1 bytes @ 0x2
   303     0072                     	ds	1
   304     0073                     ??_writeWord:
   305     0073                     writeWord@word:	
   306                           ; 1 bytes @ 0x3
   307                           
   308                           
   309                           ; 1 bytes @ 0x3
   310     0073                     	ds	1
   311     0074                     ??_main:
   312                           
   313                           	psect	maintext
   314     07AA                     __pmaintext:	
   315                           ; 1 bytes @ 0x4
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 32 in file "write_name_id_lcd.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : B00/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels required when called: 3
   341 ;; This function calls:
   342 ;;		_LCD_init
   343 ;;		_LCD_line1
   344 ;;		_LCD_line2
   345 ;;		_writeWord
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     07AA                     _main:	
   352                           ;psect for function _main
   353                           
   354     07AA                     l768:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   357                           
   358     07AA  120A  118A  27C9  120A  118A  	fcall	_LCD_init
   359     07AF  120A  118A  2744  120A  118A  	fcall	_LCD_line1
   360     07B4                     l770:
   361     07B4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   362     07B5  120A  118A  278B  120A  118A  	fcall	_writeWord
   363     07BA                     l772:
   364     07BA  120A  118A  2754  120A  118A  	fcall	_LCD_line2
   365     07BF  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   366     07C0  120A  118A  278B  120A  118A  	fcall	_writeWord
   367     07C5                     l57:
   368     07C5                     l58:
   369     07C5  2FC5               	goto	l57
   370     07C6  120A  118A  2800   	ljmp	start
   371     07C9                     __end_of_main:
   372                           
   373                           	psect	text1
   374     078B                     __ptext1:	
   375 ;; *************** function _writeWord *****************
   376 ;; Defined at:
   377 ;;		line 25 in file "write_name_id_lcd.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  word            1    wreg     PTR unsigned char 
   380 ;;		 -> STR_2(12), STR_1(21), 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  word            1    3[COMMON] PTR unsigned char 
   383 ;;		 -> STR_2(12), STR_1(21), 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         1       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0
   396 ;;      Totals:         1       0       0       0       0
   397 ;;Total ram usage:        1 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 2
   400 ;; This function calls:
   401 ;;		_LCD_write
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     078B                     _writeWord:	
   408                           ;psect for function _writeWord
   409                           
   410                           
   411                           ;incstack = 0
   412                           ; Regs used in _writeWord: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   413                           ;writeWord@word stored from wreg
   414     078B  00F3               	movwf	writeWord@word
   415     078C                     l760:
   416                           
   417                           ;write_name_id_lcd.c: 26: }
   418     078C  2F9D               	goto	l766
   419     078D                     l762:
   420     078D  0873               	movf	writeWord@word,w
   421     078E  0084               	movwf	4
   422     078F  120A  118A  2003  120A  118A  	fcall	stringdir
   423     0794  120A  118A  2764  120A  118A  	fcall	_LCD_write
   424     0799                     l764:
   425     0799  3001               	movlw	1
   426     079A  00FF               	movwf	btemp+1
   427     079B  087F               	movf	btemp+1,w
   428     079C  07F3               	addwf	writeWord@word,f
   429     079D                     l766:
   430                           
   431                           ;write_name_id_lcd.c: 26: }
   432     079D  0873               	movf	writeWord@word,w
   433     079E  0084               	movwf	4
   434     079F  120A  118A  2003  120A  118A  	fcall	stringdir
   435     07A4  3A00               	xorlw	0
   436     07A5  1D03               	skipz
   437     07A6  2FA8               	goto	u31
   438     07A7  2FA9               	goto	u30
   439     07A8                     u31:
   440     07A8  2F8D               	goto	l762
   441     07A9                     u30:
   442     07A9                     l52:
   443     07A9  0008               	return
   444     07AA                     __end_of_writeWord:
   445                           
   446                           	psect	text2
   447     0764                     __ptext2:	
   448 ;; *************** function _LCD_write *****************
   449 ;; Defined at:
   450 ;;		line 43 in file "./lcd.h"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  x               1    wreg     unsigned char 
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  x               1    2[COMMON] unsigned char 
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         1       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 1
   471 ;; This function calls:
   472 ;;		_delay
   473 ;; This function is called by:
   474 ;;		_writeWord
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     0764                     _LCD_write:	
   479                           ;psect for function _LCD_write
   480                           
   481                           
   482                           ;incstack = 0
   483                           ; Regs used in _LCD_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   484                           ;LCD_write@x stored from wreg
   485     0764  00F2               	movwf	LCD_write@x
   486     0765                     l676:
   487                           
   488                           ;./lcd.h: 43: void LCD_write(char x);./lcd.h: 44: {;./lcd.h: 45:  PORTD = x;
   489     0765  0872               	movf	LCD_write@x,w
   490     0766  1283               	bcf	3,5	;RP0=0, select bank0
   491     0767  1303               	bcf	3,6	;RP1=0, select bank0
   492     0768  0088               	movwf	8	;volatile
   493     0769                     l678:
   494                           
   495                           ;./lcd.h: 46:  RE0 = 1;
   496     0769  1409               	bsf	9,0	;volatile
   497     076A                     l680:
   498                           
   499                           ;./lcd.h: 47:  RE1 = 0;
   500     076A  1089               	bcf	9,1	;volatile
   501     076B                     l682:
   502                           
   503                           ;./lcd.h: 48:  RE2 = 0;
   504     076B  1109               	bcf	9,2	;volatile
   505     076C                     l684:
   506                           
   507                           ;./lcd.h: 49:  delay();
   508     076C  120A  118A  2775  120A  118A  	fcall	_delay
   509     0771                     l686:
   510                           
   511                           ;./lcd.h: 50:  RE2 = 1;
   512     0771  1283               	bcf	3,5	;RP0=0, select bank0
   513     0772  1303               	bcf	3,6	;RP1=0, select bank0
   514     0773  1509               	bsf	9,2	;volatile
   515     0774                     l29:
   516     0774  0008               	return
   517     0775                     __end_of_LCD_write:
   518                           
   519                           	psect	text3
   520     0754                     __ptext3:	
   521 ;; *************** function _LCD_line2 *****************
   522 ;; Defined at:
   523 ;;		line 70 in file "./lcd.h"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_delay
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551     0754                     _LCD_line2:	
   552                           ;psect for function _LCD_line2
   553                           
   554     0754                     l722:	
   555                           ;incstack = 0
   556                           ; Regs used in _LCD_line2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   557                           
   558                           
   559                           ;./lcd.h: 71:     PORTD = 0xC0;
   560     0754  30C0               	movlw	192
   561     0755  1283               	bcf	3,5	;RP0=0, select bank0
   562     0756  1303               	bcf	3,6	;RP1=0, select bank0
   563     0757  0088               	movwf	8	;volatile
   564     0758                     l724:
   565                           
   566                           ;./lcd.h: 72:     RE0 = 0;
   567     0758  1009               	bcf	9,0	;volatile
   568     0759                     l726:
   569                           
   570                           ;./lcd.h: 73:     RE1 = 0;
   571     0759  1089               	bcf	9,1	;volatile
   572     075A                     l728:
   573                           
   574                           ;./lcd.h: 74:     RE2=0;
   575     075A  1109               	bcf	9,2	;volatile
   576     075B                     l730:
   577                           
   578                           ;./lcd.h: 75:     delay();
   579     075B  120A  118A  2775  120A  118A  	fcall	_delay
   580     0760                     l732:
   581                           
   582                           ;./lcd.h: 76:  RE2 = 1;
   583     0760  1283               	bcf	3,5	;RP0=0, select bank0
   584     0761  1303               	bcf	3,6	;RP1=0, select bank0
   585     0762  1509               	bsf	9,2	;volatile
   586     0763                     l38:
   587     0763  0008               	return
   588     0764                     __end_of_LCD_line2:
   589                           
   590                           	psect	text4
   591     0744                     __ptext4:	
   592 ;; *************** function _LCD_line1 *****************
   593 ;; Defined at:
   594 ;;		line 62 in file "./lcd.h"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 1
   615 ;; This function calls:
   616 ;;		_delay
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622     0744                     _LCD_line1:	
   623                           ;psect for function _LCD_line1
   624                           
   625     0744                     l710:	
   626                           ;incstack = 0
   627                           ; Regs used in _LCD_line1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   628                           
   629                           
   630                           ;./lcd.h: 63:     PORTD = 0x02;
   631     0744  3002               	movlw	2
   632     0745  1283               	bcf	3,5	;RP0=0, select bank0
   633     0746  1303               	bcf	3,6	;RP1=0, select bank0
   634     0747  0088               	movwf	8	;volatile
   635     0748                     l712:
   636                           
   637                           ;./lcd.h: 64:     RE0 = 0;
   638     0748  1009               	bcf	9,0	;volatile
   639     0749                     l714:
   640                           
   641                           ;./lcd.h: 65:     RE1 = 0;
   642     0749  1089               	bcf	9,1	;volatile
   643     074A                     l716:
   644                           
   645                           ;./lcd.h: 66:     RE2=0;
   646     074A  1109               	bcf	9,2	;volatile
   647     074B                     l718:
   648                           
   649                           ;./lcd.h: 67:     delay();
   650     074B  120A  118A  2775  120A  118A  	fcall	_delay
   651     0750                     l720:
   652                           
   653                           ;./lcd.h: 68:  RE2 = 1;
   654     0750  1283               	bcf	3,5	;RP0=0, select bank0
   655     0751  1303               	bcf	3,6	;RP1=0, select bank0
   656     0752  1509               	bsf	9,2	;volatile
   657     0753                     l35:
   658     0753  0008               	return
   659     0754                     __end_of_LCD_line1:
   660                           
   661                           	psect	text5
   662     07C9                     __ptext5:	
   663 ;; *************** function _LCD_init *****************
   664 ;; Defined at:
   665 ;;		line 28 in file "./lcd.h"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 2
   686 ;; This function calls:
   687 ;;		_LCD_enable
   688 ;;		_init
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694     07C9                     _LCD_init:	
   695                           ;psect for function _LCD_init
   696                           
   697     07C9                     l688:	
   698                           ;incstack = 0
   699                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   700                           
   701                           
   702                           ;./lcd.h: 30:     init();
   703     07C9  120A  118A  272A  120A  118A  	fcall	_init
   704     07CE                     l690:
   705                           
   706                           ;./lcd.h: 31:  PORTD = 0X1;
   707     07CE  3001               	movlw	1
   708     07CF  1283               	bcf	3,5	;RP0=0, select bank0
   709     07D0  1303               	bcf	3,6	;RP1=0, select bank0
   710     07D1  0088               	movwf	8	;volatile
   711     07D2                     l692:
   712                           
   713                           ;./lcd.h: 32:  LCD_enable();
   714     07D2  120A  118A  2736  120A  118A  	fcall	_LCD_enable
   715     07D7                     l694:
   716                           
   717                           ;./lcd.h: 33:  PORTD = 0X38;
   718     07D7  3038               	movlw	56
   719     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   720     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   721     07DA  0088               	movwf	8	;volatile
   722     07DB                     l696:
   723                           
   724                           ;./lcd.h: 34:  LCD_enable();
   725     07DB  120A  118A  2736  120A  118A  	fcall	_LCD_enable
   726     07E0                     l698:
   727                           
   728                           ;./lcd.h: 35:  PORTD = 0X0e;
   729     07E0  300E               	movlw	14
   730     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   731     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   732     07E3  0088               	movwf	8	;volatile
   733     07E4                     l700:
   734                           
   735                           ;./lcd.h: 36:  LCD_enable();
   736     07E4  120A  118A  2736  120A  118A  	fcall	_LCD_enable
   737     07E9                     l702:
   738                           
   739                           ;./lcd.h: 37:  PORTD = 0X06;
   740     07E9  3006               	movlw	6
   741     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   742     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   743     07EC  0088               	movwf	8	;volatile
   744     07ED                     l704:
   745                           
   746                           ;./lcd.h: 38:  LCD_enable();
   747     07ED  120A  118A  2736  120A  118A  	fcall	_LCD_enable
   748     07F2                     l706:
   749                           
   750                           ;./lcd.h: 39:  PORTD = 0X80;
   751     07F2  3080               	movlw	128
   752     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   753     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   754     07F5  0088               	movwf	8	;volatile
   755     07F6                     l708:
   756                           
   757                           ;./lcd.h: 40:  LCD_enable();
   758     07F6  120A  118A  2736  120A  118A  	fcall	_LCD_enable
   759     07FB                     l26:
   760     07FB  0008               	return
   761     07FC                     __end_of_LCD_init:
   762                           
   763                           	psect	text6
   764     072A                     __ptext6:	
   765 ;; *************** function _init *****************
   766 ;; Defined at:
   767 ;;		line 20 in file "./lcd.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_LCD_init
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794     072A                     _init:	
   795                           ;psect for function _init
   796                           
   797     072A                     l662:	
   798                           ;incstack = 0
   799                           ; Regs used in _init: [wreg+status,2]
   800                           
   801                           
   802                           ;./lcd.h: 22:  ADCON1 = 0X07;
   803     072A  3007               	movlw	7
   804     072B  1683               	bsf	3,5	;RP0=1, select bank1
   805     072C  1303               	bcf	3,6	;RP1=0, select bank1
   806     072D  009F               	movwf	31	;volatile
   807     072E                     l664:
   808                           
   809                           ;./lcd.h: 23:     RA1=1;
   810     072E  1283               	bcf	3,5	;RP0=0, select bank0
   811     072F  1303               	bcf	3,6	;RP1=0, select bank0
   812     0730  1485               	bsf	5,1	;volatile
   813     0731                     l666:
   814                           
   815                           ;./lcd.h: 24:  TRISE = 0X00;
   816     0731  1683               	bsf	3,5	;RP0=1, select bank1
   817     0732  1303               	bcf	3,6	;RP1=0, select bank1
   818     0733  0189               	clrf	9	;volatile
   819     0734                     l668:
   820                           
   821                           ;./lcd.h: 25:  TRISD = 0X00;
   822     0734  0188               	clrf	8	;volatile
   823     0735                     l23:
   824     0735  0008               	return
   825     0736                     __end_of_init:
   826                           
   827                           	psect	text7
   828     0736                     __ptext7:	
   829 ;; *************** function _LCD_enable *****************
   830 ;; Defined at:
   831 ;;		line 82 in file "./lcd.h"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 1
   852 ;; This function calls:
   853 ;;		_delay
   854 ;; This function is called by:
   855 ;;		_LCD_init
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     0736                     _LCD_enable:	
   860                           ;psect for function _LCD_enable
   861                           
   862     0736                     l670:	
   863                           ;incstack = 0
   864                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   865                           
   866                           
   867                           ;./lcd.h: 84:  RE0 = 0;
   868     0736  1283               	bcf	3,5	;RP0=0, select bank0
   869     0737  1303               	bcf	3,6	;RP1=0, select bank0
   870     0738  1009               	bcf	9,0	;volatile
   871                           
   872                           ;./lcd.h: 85:  RE1 = 0;
   873     0739  1089               	bcf	9,1	;volatile
   874                           
   875                           ;./lcd.h: 86:  RE2 = 0;
   876     073A  1109               	bcf	9,2	;volatile
   877     073B                     l672:
   878                           
   879                           ;./lcd.h: 87:  delay();
   880     073B  120A  118A  2775  120A  118A  	fcall	_delay
   881     0740                     l674:
   882                           
   883                           ;./lcd.h: 88:  RE2 = 1;
   884     0740  1283               	bcf	3,5	;RP0=0, select bank0
   885     0741  1303               	bcf	3,6	;RP1=0, select bank0
   886     0742  1509               	bsf	9,2	;volatile
   887     0743                     l41:
   888     0743  0008               	return
   889     0744                     __end_of_LCD_enable:
   890                           
   891                           	psect	text8
   892     0775                     __ptext8:	
   893 ;; *************** function _delay *****************
   894 ;; Defined at:
   895 ;;		line 91 in file "./lcd.h"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  i               2    0[COMMON] int 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, btemp+1
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         2       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         2       0       0       0       0
   913 ;;Total ram usage:        2 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_LCD_write
   919 ;;		_LCD_line1
   920 ;;		_LCD_line2
   921 ;;		_LCD_enable
   922 ;;		_LCD_clear
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926     0775                     _delay:	
   927                           ;psect for function _delay
   928                           
   929     0775                     l652:	
   930                           ;incstack = 0
   931                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   932                           
   933                           
   934                           ;./lcd.h: 93:  int i;;./lcd.h: 94:  for (i = 0;i < 5000;i++);
   935     0775  01F0               	clrf	delay@i
   936     0776  01F1               	clrf	delay@i+1
   937     0777                     l658:
   938     0777  3001               	movlw	1
   939     0778  07F0               	addwf	delay@i,f
   940     0779  1803               	skipnc
   941     077A  0AF1               	incf	delay@i+1,f
   942     077B  3000               	movlw	0
   943     077C  07F1               	addwf	delay@i+1,f
   944     077D                     l660:
   945     077D  0871               	movf	delay@i+1,w
   946     077E  3A80               	xorlw	128
   947     077F  00FF               	movwf	btemp+1
   948     0780  3093               	movlw	147
   949     0781  027F               	subwf	btemp+1,w
   950     0782  1D03               	skipz
   951     0783  2F86               	goto	u15
   952     0784  3088               	movlw	136
   953     0785  0270               	subwf	delay@i,w
   954     0786                     u15:
   955     0786  1C03               	skipc
   956     0787  2F89               	goto	u11
   957     0788  2F8A               	goto	u10
   958     0789                     u11:
   959     0789  2F77               	goto	l658
   960     078A                     u10:
   961     078A                     l46:
   962     078A  0008               	return
   963     078B                     __end_of_delay:
   964     007E                     btemp	set	126	;btemp
   965     007E                     wtemp0	set	126
   966                           
   967                           	psect	config
   968                           
   969                           ;Config register CONFIG @ 0x2007
   970                           ;	Oscillator Selection bits
   971                           ;	FOSC = HS, HS oscillator
   972                           ;	Watchdog Timer Enable bit
   973                           ;	WDTE = OFF, WDT disabled
   974                           ;	Power-up Timer Enable bit
   975                           ;	PWRTE = OFF, PWRT disabled
   976                           ;	Brown-out Reset Enable bit
   977                           ;	BOREN = ON, BOR enabled
   978                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   979                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   980                           ;	Data EEPROM Memory Code Protection bit
   981                           ;	CPD = 0x1, unprogrammed default
   982                           ;	Flash Program Memory Write Enable bits
   983                           ;	WRT = 0x3, unprogrammed default
   984                           ;	In-Circuit Debugger Mode bit
   985                           ;	DEBUG = 0x1, unprogrammed default
   986                           ;	Flash Program Memory Code Protection bit
   987                           ;	CP = 0x1, unprogrammed default
   988     2007                     	org	8199
   989     2007  3F7A               	dw	16250

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    writeWord@word	PTR unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[12]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _main->_writeWord
    _writeWord->_LCD_write
    _LCD_write->_delay
    _LCD_line2->_delay
    _LCD_line1->_delay
    _LCD_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     246
                           _LCD_init
                          _LCD_line1
                          _LCD_line2
                          _writeWord
 ---------------------------------------------------------------------------------
 (1) _writeWord                                            1     1      0     156
                                              3 COMMON     1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_write                                            1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_line2                                            0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_line1                                            0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      30
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_line1
     _delay
   _LCD_line2
     _delay
   _writeWord
     _LCD_write
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 12:02:50 2023

                      pc 0002                       l23 0735                       l41 0743  
                     l26 07FB                       l35 0753                       l52 07A9  
                     l29 0774                       l46 078A                       l38 0763  
                     l57 07C5                       l58 07C5                       u10 078A  
                     u11 0789                       u30 07A9                       u15 0786  
                     u31 07A8                       fsr 0004              ?_LCD_enable 0070  
                    l700 07E4                      l702 07E9                      l710 0744  
                    l704 07ED                      l720 0750                      l712 0748  
                    l706 07F2                      l714 0749                      l730 075B  
                    l722 0754                      l660 077D                      l652 0775  
                    l708 07F6                      l716 074A                      l732 0760  
                    l724 0758                      l670 0736                      l662 072A  
                    l718 074B                      l726 0759                      l672 073B  
                    l664 072E                      l728 075A                      l680 076A  
                    l760 078C                      l658 0777                      l674 0740  
                    l666 0731                      l690 07CE                      l682 076B  
                    l762 078D                      l770 07B4                      l668 0734  
                    l692 07D2                      l684 076C                      l676 0765  
                    l764 0799                      l772 07BA                      l694 07D7  
                    l686 0771                      l678 0769                      l766 079D  
                    l696 07DB                      l688 07C9                      l768 07AA  
                    l698 07E0                      _RA1 0029                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      fsr0 0004  
          writeWord@word 0073                     STR_1 0009                     STR_2 001E  
                   _main 07AA                     _init 072A                     btemp 007E  
                   start 0000         __end_of_LCD_init 07FC                    ?_main 0070  
                  ?_init 0070                    _PORTD 0008                    _TRISD 0088  
                  _TRISE 0089                    _delay 0775                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07C9             __end_of_init 0736                   ??_main 0074  
                 ??_init 0070        __end_of_LCD_line1 0754        __end_of_LCD_line2 0764  
                 ?_delay 0070        __end_of_LCD_write 0775                   _ADCON1 009F  
                 delay@i 0070  __end_of__initialization 07FC                ?_LCD_init 0070  
         __pcstackCOMMON 0070            __end_of_delay 078B             ??_LCD_enable 0072  
                ??_delay 0070               ??_LCD_init 0072       __end_of_LCD_enable 0744  
             __pmaintext 07AA               __stringtab 0003                  __ptext1 078B  
                __ptext2 0764                  __ptext3 0754                  __ptext4 0744  
                __ptext5 07C9                  __ptext6 072A                  __ptext7 0736  
                __ptext8 0775     end_of_initialization 07FC                _LCD_line1 0744  
              _LCD_line2 0754                _LCD_write 0764        __end_of_writeWord 07AA  
             ?_LCD_line1 0070               ?_LCD_line2 0070               ?_LCD_write 0070  
    start_initialization 07FC               LCD_write@x 0072                ___latbits 0002  
            ??_LCD_line1 0072              ??_LCD_line2 0072              ??_LCD_write 0072  
              __pstrings 0003                 _LCD_init 07C9              __stringbase 0008  
              _writeWord 078B       __end_of__stringtab 0009               ?_writeWord 0070  
             _LCD_enable 0736                stringcode 0003                 stringdir 0003  
               stringtab 0003              ??_writeWord 0073  
