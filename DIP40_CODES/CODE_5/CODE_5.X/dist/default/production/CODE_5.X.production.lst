

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 11:51:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0008                     _PORTD	set	8
   172     004A                     _RE2	set	74
   173     0049                     _RE1	set	73
   174     0048                     _RE0	set	72
   175     0029                     _RA1	set	41
   176     0088                     _TRISD	set	136
   177     0089                     _TRISE	set	137
   178     009F                     _ADCON1	set	159
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FA1   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_LCD_enable:
   195     0070                     ?_delay:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ??_delay:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ?_init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ??_init:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_LCD_init:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_LCD_write:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_LCD_clear:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_LCD_line1:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     delay@i:	
   223                           ; 1 bytes @ 0x0
   224                           
   225                           
   226                           ; 2 bytes @ 0x0
   227     0070                     	ds	2
   228     0072                     ??_LCD_enable:
   229     0072                     ??_LCD_init:	
   230                           ; 1 bytes @ 0x2
   231                           
   232     0072                     ??_LCD_write:	
   233                           ; 1 bytes @ 0x2
   234                           
   235     0072                     ??_LCD_clear:	
   236                           ; 1 bytes @ 0x2
   237                           
   238     0072                     ??_LCD_line1:	
   239                           ; 1 bytes @ 0x2
   240                           
   241     0072                     LCD_write@x:	
   242                           ; 1 bytes @ 0x2
   243                           
   244                           
   245                           ; 1 bytes @ 0x2
   246     0072                     	ds	1
   247     0073                     ??_main:
   248                           
   249                           	psect	maintext
   250     07A1                     __pmaintext:	
   251                           ; 1 bytes @ 0x3
   252 ;;
   253 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   254 ;;
   255 ;; *************** function _main *****************
   256 ;; Defined at:
   257 ;;		line 23 in file "lcd_hello_world.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : B00/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   271 ;;      Params:         0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels required when called: 3
   277 ;; This function calls:
   278 ;;		_LCD_clear
   279 ;;		_LCD_init
   280 ;;		_LCD_line1
   281 ;;		_LCD_write
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287     07A1                     _main:	
   288                           ;psect for function _main
   289                           
   290     07A1                     l740:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   293                           
   294     07A1  120A  118A  276E  120A  118A  	fcall	_LCD_init
   295     07A6  120A  118A  2727  120A  118A  	fcall	_LCD_clear
   296     07AB  120A  118A  2737  120A  118A  	fcall	_LCD_line1
   297     07B0  3048               	movlw	72
   298     07B1  120A  118A  2747  120A  118A  	fcall	_LCD_write
   299     07B6  3045               	movlw	69
   300     07B7  120A  118A  2747  120A  118A  	fcall	_LCD_write
   301     07BC  304C               	movlw	76
   302     07BD  120A  118A  2747  120A  118A  	fcall	_LCD_write
   303     07C2  304C               	movlw	76
   304     07C3  120A  118A  2747  120A  118A  	fcall	_LCD_write
   305     07C8  304F               	movlw	79
   306     07C9  120A  118A  2747  120A  118A  	fcall	_LCD_write
   307     07CE  3020               	movlw	32
   308     07CF  120A  118A  2747  120A  118A  	fcall	_LCD_write
   309     07D4  3057               	movlw	87
   310     07D5  120A  118A  2747  120A  118A  	fcall	_LCD_write
   311     07DA  304F               	movlw	79
   312     07DB  120A  118A  2747  120A  118A  	fcall	_LCD_write
   313     07E0  304C               	movlw	76
   314     07E1  120A  118A  2747  120A  118A  	fcall	_LCD_write
   315     07E6  3052               	movlw	82
   316     07E7  120A  118A  2747  120A  118A  	fcall	_LCD_write
   317     07EC  3044               	movlw	68
   318     07ED  120A  118A  2747  120A  118A  	fcall	_LCD_write
   319     07F2  3021               	movlw	33
   320     07F3  120A  118A  2747  120A  118A  	fcall	_LCD_write
   321     07F8                     l51:
   322     07F8                     l52:
   323     07F8  2FF8               	goto	l51
   324     07F9  120A  118A  2800   	ljmp	start
   325     07FC                     __end_of_main:
   326                           
   327                           	psect	text1
   328     0747                     __ptext1:	
   329 ;; *************** function _LCD_write *****************
   330 ;; Defined at:
   331 ;;		line 43 in file "./lcd.h"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  x               1    wreg     unsigned char 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  x               1    2[COMMON] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         1       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         1       0       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		_delay
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     0747                     _LCD_write:	
   360                           ;psect for function _LCD_write
   361                           
   362                           
   363                           ;incstack = 0
   364                           ; Regs used in _LCD_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   365                           ;LCD_write@x stored from wreg
   366     0747  00F2               	movwf	LCD_write@x
   367     0748                     l692:
   368                           
   369                           ;./lcd.h: 43: void LCD_write(char x);./lcd.h: 44: {;./lcd.h: 45:  PORTD = x;
   370     0748  0872               	movf	LCD_write@x,w
   371     0749  1283               	bcf	3,5	;RP0=0, select bank0
   372     074A  1303               	bcf	3,6	;RP1=0, select bank0
   373     074B  0088               	movwf	8	;volatile
   374     074C                     l694:
   375                           
   376                           ;./lcd.h: 46:  RE0 = 1;
   377     074C  1409               	bsf	9,0	;volatile
   378     074D                     l696:
   379                           
   380                           ;./lcd.h: 47:  RE1 = 0;
   381     074D  1089               	bcf	9,1	;volatile
   382     074E                     l698:
   383                           
   384                           ;./lcd.h: 48:  RE2 = 0;
   385     074E  1109               	bcf	9,2	;volatile
   386     074F                     l700:
   387                           
   388                           ;./lcd.h: 49:  delay();
   389     074F  120A  118A  2758  120A  118A  	fcall	_delay
   390     0754                     l702:
   391                           
   392                           ;./lcd.h: 50:  RE2 = 1;
   393     0754  1283               	bcf	3,5	;RP0=0, select bank0
   394     0755  1303               	bcf	3,6	;RP1=0, select bank0
   395     0756  1509               	bsf	9,2	;volatile
   396     0757                     l29:
   397     0757  0008               	return
   398     0758                     __end_of_LCD_write:
   399                           
   400                           	psect	text2
   401     0737                     __ptext2:	
   402 ;; *************** function _LCD_line1 *****************
   403 ;; Defined at:
   404 ;;		line 62 in file "./lcd.h"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; Hardware stack levels required when called: 1
   425 ;; This function calls:
   426 ;;		_delay
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432     0737                     _LCD_line1:	
   433                           ;psect for function _LCD_line1
   434                           
   435     0737                     l716:	
   436                           ;incstack = 0
   437                           ; Regs used in _LCD_line1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   438                           
   439                           
   440                           ;./lcd.h: 63:     PORTD = 0x02;
   441     0737  3002               	movlw	2
   442     0738  1283               	bcf	3,5	;RP0=0, select bank0
   443     0739  1303               	bcf	3,6	;RP1=0, select bank0
   444     073A  0088               	movwf	8	;volatile
   445     073B                     l718:
   446                           
   447                           ;./lcd.h: 64:     RE0 = 0;
   448     073B  1009               	bcf	9,0	;volatile
   449     073C                     l720:
   450                           
   451                           ;./lcd.h: 65:     RE1 = 0;
   452     073C  1089               	bcf	9,1	;volatile
   453     073D                     l722:
   454                           
   455                           ;./lcd.h: 66:     RE2=0;
   456     073D  1109               	bcf	9,2	;volatile
   457     073E                     l724:
   458                           
   459                           ;./lcd.h: 67:     delay();
   460     073E  120A  118A  2758  120A  118A  	fcall	_delay
   461     0743                     l726:
   462                           
   463                           ;./lcd.h: 68:  RE2 = 1;
   464     0743  1283               	bcf	3,5	;RP0=0, select bank0
   465     0744  1303               	bcf	3,6	;RP1=0, select bank0
   466     0745  1509               	bsf	9,2	;volatile
   467     0746                     l35:
   468     0746  0008               	return
   469     0747                     __end_of_LCD_line1:
   470                           
   471                           	psect	text3
   472     076E                     __ptext3:	
   473 ;; *************** function _LCD_init *****************
   474 ;; Defined at:
   475 ;;		line 28 in file "./lcd.h"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		_LCD_enable
   498 ;;		_init
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504     076E                     _LCD_init:	
   505                           ;psect for function _LCD_init
   506                           
   507     076E                     l670:	
   508                           ;incstack = 0
   509                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   510                           
   511                           
   512                           ;./lcd.h: 30:     init();
   513     076E  120A  118A  270D  120A  118A  	fcall	_init
   514     0773                     l672:
   515                           
   516                           ;./lcd.h: 31:  PORTD = 0X1;
   517     0773  3001               	movlw	1
   518     0774  1283               	bcf	3,5	;RP0=0, select bank0
   519     0775  1303               	bcf	3,6	;RP1=0, select bank0
   520     0776  0088               	movwf	8	;volatile
   521     0777                     l674:
   522                           
   523                           ;./lcd.h: 32:  LCD_enable();
   524     0777  120A  118A  2719  120A  118A  	fcall	_LCD_enable
   525     077C                     l676:
   526                           
   527                           ;./lcd.h: 33:  PORTD = 0X38;
   528     077C  3038               	movlw	56
   529     077D  1283               	bcf	3,5	;RP0=0, select bank0
   530     077E  1303               	bcf	3,6	;RP1=0, select bank0
   531     077F  0088               	movwf	8	;volatile
   532     0780                     l678:
   533                           
   534                           ;./lcd.h: 34:  LCD_enable();
   535     0780  120A  118A  2719  120A  118A  	fcall	_LCD_enable
   536     0785                     l680:
   537                           
   538                           ;./lcd.h: 35:  PORTD = 0X0e;
   539     0785  300E               	movlw	14
   540     0786  1283               	bcf	3,5	;RP0=0, select bank0
   541     0787  1303               	bcf	3,6	;RP1=0, select bank0
   542     0788  0088               	movwf	8	;volatile
   543     0789                     l682:
   544                           
   545                           ;./lcd.h: 36:  LCD_enable();
   546     0789  120A  118A  2719  120A  118A  	fcall	_LCD_enable
   547     078E                     l684:
   548                           
   549                           ;./lcd.h: 37:  PORTD = 0X06;
   550     078E  3006               	movlw	6
   551     078F  1283               	bcf	3,5	;RP0=0, select bank0
   552     0790  1303               	bcf	3,6	;RP1=0, select bank0
   553     0791  0088               	movwf	8	;volatile
   554     0792                     l686:
   555                           
   556                           ;./lcd.h: 38:  LCD_enable();
   557     0792  120A  118A  2719  120A  118A  	fcall	_LCD_enable
   558     0797                     l688:
   559                           
   560                           ;./lcd.h: 39:  PORTD = 0X80;
   561     0797  3080               	movlw	128
   562     0798  1283               	bcf	3,5	;RP0=0, select bank0
   563     0799  1303               	bcf	3,6	;RP1=0, select bank0
   564     079A  0088               	movwf	8	;volatile
   565     079B                     l690:
   566                           
   567                           ;./lcd.h: 40:  LCD_enable();
   568     079B  120A  118A  2719  120A  118A  	fcall	_LCD_enable
   569     07A0                     l26:
   570     07A0  0008               	return
   571     07A1                     __end_of_LCD_init:
   572                           
   573                           	psect	text4
   574     070D                     __ptext4:	
   575 ;; *************** function _init *****************
   576 ;; Defined at:
   577 ;;		line 20 in file "./lcd.h"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_LCD_init
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     070D                     _init:	
   605                           ;psect for function _init
   606                           
   607     070D                     l656:	
   608                           ;incstack = 0
   609                           ; Regs used in _init: [wreg+status,2]
   610                           
   611                           
   612                           ;./lcd.h: 22:  ADCON1 = 0X07;
   613     070D  3007               	movlw	7
   614     070E  1683               	bsf	3,5	;RP0=1, select bank1
   615     070F  1303               	bcf	3,6	;RP1=0, select bank1
   616     0710  009F               	movwf	31	;volatile
   617     0711                     l658:
   618                           
   619                           ;./lcd.h: 23:     RA1=1;
   620     0711  1283               	bcf	3,5	;RP0=0, select bank0
   621     0712  1303               	bcf	3,6	;RP1=0, select bank0
   622     0713  1485               	bsf	5,1	;volatile
   623     0714                     l660:
   624                           
   625                           ;./lcd.h: 24:  TRISE = 0X00;
   626     0714  1683               	bsf	3,5	;RP0=1, select bank1
   627     0715  1303               	bcf	3,6	;RP1=0, select bank1
   628     0716  0189               	clrf	9	;volatile
   629     0717                     l662:
   630                           
   631                           ;./lcd.h: 25:  TRISD = 0X00;
   632     0717  0188               	clrf	8	;volatile
   633     0718                     l23:
   634     0718  0008               	return
   635     0719                     __end_of_init:
   636                           
   637                           	psect	text5
   638     0719                     __ptext5:	
   639 ;; *************** function _LCD_enable *****************
   640 ;; Defined at:
   641 ;;		line 82 in file "./lcd.h"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 1
   662 ;; This function calls:
   663 ;;		_delay
   664 ;; This function is called by:
   665 ;;		_LCD_init
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669     0719                     _LCD_enable:	
   670                           ;psect for function _LCD_enable
   671                           
   672     0719                     l664:	
   673                           ;incstack = 0
   674                           ; Regs used in _LCD_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   675                           
   676                           
   677                           ;./lcd.h: 84:  RE0 = 0;
   678     0719  1283               	bcf	3,5	;RP0=0, select bank0
   679     071A  1303               	bcf	3,6	;RP1=0, select bank0
   680     071B  1009               	bcf	9,0	;volatile
   681                           
   682                           ;./lcd.h: 85:  RE1 = 0;
   683     071C  1089               	bcf	9,1	;volatile
   684                           
   685                           ;./lcd.h: 86:  RE2 = 0;
   686     071D  1109               	bcf	9,2	;volatile
   687     071E                     l666:
   688                           
   689                           ;./lcd.h: 87:  delay();
   690     071E  120A  118A  2758  120A  118A  	fcall	_delay
   691     0723                     l668:
   692                           
   693                           ;./lcd.h: 88:  RE2 = 1;
   694     0723  1283               	bcf	3,5	;RP0=0, select bank0
   695     0724  1303               	bcf	3,6	;RP1=0, select bank0
   696     0725  1509               	bsf	9,2	;volatile
   697     0726                     l41:
   698     0726  0008               	return
   699     0727                     __end_of_LCD_enable:
   700                           
   701                           	psect	text6
   702     0727                     __ptext6:	
   703 ;; *************** function _LCD_clear *****************
   704 ;; Defined at:
   705 ;;		line 53 in file "./lcd.h"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0
   722 ;;      Totals:         0       0       0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 1
   726 ;; This function calls:
   727 ;;		_delay
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733     0727                     _LCD_clear:	
   734                           ;psect for function _LCD_clear
   735                           
   736     0727                     l704:	
   737                           ;incstack = 0
   738                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   739                           
   740                           
   741                           ;./lcd.h: 54:     PORTD = 0x01;
   742     0727  3001               	movlw	1
   743     0728  1283               	bcf	3,5	;RP0=0, select bank0
   744     0729  1303               	bcf	3,6	;RP1=0, select bank0
   745     072A  0088               	movwf	8	;volatile
   746     072B                     l706:
   747                           
   748                           ;./lcd.h: 55:     RE0 = 0;
   749     072B  1009               	bcf	9,0	;volatile
   750     072C                     l708:
   751                           
   752                           ;./lcd.h: 56:     RE1 = 0;
   753     072C  1089               	bcf	9,1	;volatile
   754     072D                     l710:
   755                           
   756                           ;./lcd.h: 57:     RE2=0;
   757     072D  1109               	bcf	9,2	;volatile
   758     072E                     l712:
   759                           
   760                           ;./lcd.h: 58:     delay();
   761     072E  120A  118A  2758  120A  118A  	fcall	_delay
   762     0733                     l714:
   763                           
   764                           ;./lcd.h: 59:  RE2 = 1;
   765     0733  1283               	bcf	3,5	;RP0=0, select bank0
   766     0734  1303               	bcf	3,6	;RP1=0, select bank0
   767     0735  1509               	bsf	9,2	;volatile
   768     0736                     l32:
   769     0736  0008               	return
   770     0737                     __end_of_LCD_clear:
   771                           
   772                           	psect	text7
   773     0758                     __ptext7:	
   774 ;; *************** function _delay *****************
   775 ;; Defined at:
   776 ;;		line 91 in file "./lcd.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  i               2    0[COMMON] int 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, btemp+1
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         2       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         2       0       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_LCD_write
   800 ;;		_LCD_clear
   801 ;;		_LCD_line1
   802 ;;		_LCD_enable
   803 ;;		_LCD_line2
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807     0758                     _delay:	
   808                           ;psect for function _delay
   809                           
   810     0758                     l646:	
   811                           ;incstack = 0
   812                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   813                           
   814                           
   815                           ;./lcd.h: 93:  int i;;./lcd.h: 94:  for (i = 0;i < 5000;i++);
   816     0758  01F0               	clrf	delay@i
   817     0759  01F1               	clrf	delay@i+1
   818     075A                     l652:
   819     075A  3001               	movlw	1
   820     075B  07F0               	addwf	delay@i,f
   821     075C  1803               	skipnc
   822     075D  0AF1               	incf	delay@i+1,f
   823     075E  3000               	movlw	0
   824     075F  07F1               	addwf	delay@i+1,f
   825     0760                     l654:
   826     0760  0871               	movf	delay@i+1,w
   827     0761  3A80               	xorlw	128
   828     0762  00FF               	movwf	btemp+1
   829     0763  3093               	movlw	147
   830     0764  027F               	subwf	btemp+1,w
   831     0765  1D03               	skipz
   832     0766  2F69               	goto	u15
   833     0767  3088               	movlw	136
   834     0768  0270               	subwf	delay@i,w
   835     0769                     u15:
   836     0769  1C03               	skipc
   837     076A  2F6C               	goto	u11
   838     076B  2F6D               	goto	u10
   839     076C                     u11:
   840     076C  2F5A               	goto	l652
   841     076D                     u10:
   842     076D                     l46:
   843     076D  0008               	return
   844     076E                     __end_of_delay:
   845     007E                     btemp	set	126	;btemp
   846     007E                     wtemp0	set	126
   847                           
   848                           	psect	config
   849                           
   850                           ;Config register CONFIG @ 0x2007
   851                           ;	Oscillator Selection bits
   852                           ;	FOSC = HS, HS oscillator
   853                           ;	Watchdog Timer Enable bit
   854                           ;	WDTE = OFF, WDT disabled
   855                           ;	Power-up Timer Enable bit
   856                           ;	PWRTE = OFF, PWRT disabled
   857                           ;	Brown-out Reset Enable bit
   858                           ;	BOREN = ON, BOR enabled
   859                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   860                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   861                           ;	Data EEPROM Memory Code Protection bit
   862                           ;	CPD = 0x1, unprogrammed default
   863                           ;	Flash Program Memory Write Enable bits
   864                           ;	WRT = 0x3, unprogrammed default
   865                           ;	In-Circuit Debugger Mode bit
   866                           ;	DEBUG = 0x1, unprogrammed default
   867                           ;	Flash Program Memory Code Protection bit
   868                           ;	CP = OFF, Code protection off
   869     2007                     	org	8199
   870     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_write
    _LCD_write->_delay
    _LCD_line1->_delay
    _LCD_enable->_delay
    _LCD_clear->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                          _LCD_clear
                           _LCD_init
                          _LCD_line1
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _LCD_write                                            1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_line1                                            0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      30
                         _LCD_enable
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_enable                                           0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      30
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _delay
   _LCD_init
     _LCD_enable
       _delay
     _init
   _LCD_line1
     _delay
   _LCD_write
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 11:51:35 2023

                     l23 0718                       l32 0736                       l41 0726  
                     l26 07A0                       l35 0746                       l51 07F8  
                     l52 07F8                       l29 0757                       l46 076D  
                     u10 076D                       u11 076C                       u15 0769  
            ?_LCD_enable 0070                      l700 074F                      l710 072D  
                    l702 0754                      l712 072E                      l704 0727  
                    l720 073C                      l714 0733                      l706 072B  
                    l722 073D                      l652 075A                      l708 072C  
                    l660 0714                      l724 073E                      l716 0737  
                    l740 07A1                      l654 0760                      l646 0758  
                    l662 0717                      l670 076E                      l726 0743  
                    l718 073B                      l664 0719                      l656 070D  
                    l680 0785                      l672 0773                      l666 071E  
                    l658 0711                      l690 079B                      l682 0789  
                    l674 0777                      l668 0723                      l684 078E  
                    l676 077C                      l692 0748                      l686 0792  
                    l678 0780                      l694 074C                      l688 0797  
                    l696 074D                      l698 074E                      _RA1 0029  
                    _RE0 0048                      _RE1 0049                      _RE2 004A  
                   _main 07A1                     _init 070D                     btemp 007E  
                   start 0000         __end_of_LCD_init 07A1                    ?_main 0070  
                  ?_init 0070                    _PORTD 0008                    _TRISD 0088  
                  _TRISE 0089                    _delay 0758                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
           __end_of_init 0719                   ??_main 0073                   ??_init 0070  
      __end_of_LCD_clear 0737        __end_of_LCD_line1 0747                   ?_delay 0070  
      __end_of_LCD_write 0758                   _ADCON1 009F                   delay@i 0070  
__end_of__initialization 07FC                ?_LCD_init 0070           __pcstackCOMMON 0070  
          __end_of_delay 076E             ??_LCD_enable 0072                  ??_delay 0070  
             ??_LCD_init 0072       __end_of_LCD_enable 0727               __pmaintext 07A1  
                __ptext1 0747                  __ptext2 0737                  __ptext3 076E  
                __ptext4 070D                  __ptext5 0719                  __ptext6 0727  
                __ptext7 0758                _LCD_clear 0727     end_of_initialization 07FC  
              _LCD_line1 0737                _LCD_write 0747               ?_LCD_clear 0070  
             ?_LCD_line1 0070               ?_LCD_write 0070      start_initialization 07FC  
             LCD_write@x 0072                ___latbits 0002              ??_LCD_clear 0072  
            ??_LCD_line1 0072              ??_LCD_write 0072                 _LCD_init 076E  
             _LCD_enable 0719  
